{"version":3,"sources":["Dashboard.js","components/League/CreateLeague.js","components/League/AllLeagues.js","components/League/Schedule/Schedule.js","components/League/SingleLeague.js","components/Club/CreateClub.js","components/Club/AllClubs.js","components/Club/SingleClub.js","components/Player/CreatePlayer.js","components/Player/AllPlayers.js","components/Player/SinglePlayer.js","test_data.js","components/SimulationArena/SimViews/FreeAgentsView.js","components/SimulationArena/SimViews/ContinentView.js","components/SimulationArena/SimViews/CountryView.js","components/SimulationArena/SimViews/LeagueTable.js","components/SimulationArena/SimViews/LeagueView.js","components/SimulationArena/SimViews/ClubView.js","components/SimulationArena/SimViews/PlayerView.js","components/SimulationArena/SimulationArena.js","App.js","index.js"],"names":["Dashboard","react_default","a","createElement","react_router_dom","to","Component","CreateLeague","state","newName","newPyramidPosition","newProPossible","newRelPossible","newNumberOfClubs","onNewNameChange","e","target","value","_this","setState","onNewPyramidPosition","onNewProPossible","checked","onNewRelPossible","onNewNumberOfClubs","onFormSubmit","preventDefault","newLeague","name","pyramidPosition","Number","proPossible","relPossible","numberOfClubs","props","onCreateSubmit","clearFormFields","onSubmit","this","type","placeholder","onChange","AllLeagues","listOfLeagues","createFormShow","getLeagues","_callee","res","regenerator_default","wrap","_context","prev","next","axios","get","sent","data","stop","onCreateClick","previousState","Object","objectSpread","post","onClick","CreateLeague_CreateLeague","map","league","leagueLink","concat","_id","key","Schedule","schedule","leagueTable","createSchedule","allClubs","week","i","length","j","push","home","away","score","k","points","wins","draws","losses","goalsFor","goalsAgainst","getRandomInt","max","Math","floor","random","handleNewSeason","index_cjs_default","className","title","columns","selector","sortable","theme","SingleLeague","currentClubs","filteredClubs","selectedClub","filterButtonClicked","timesClubsPlayEachOther","getLeague","leagueId","secondRes","match","params","singleLeague","onSelectChange","clubId","filter","club","onSelectSubmit","put","onFilterClubClick","filterClubs","showAllClubs","disabled","clubLink","Schedule_Schedule","CreateClub","newClub","AllClubs","listOfClubs","getClubs","CreateClub_CreateClub","SingleClub","currentPlayers","allPlayers","filteredPlayers","selectedPlayer","getClub","singleClub","playerId","player","onFilterPlayerClick","filterPlayers","showAllPlayers","firstName","lastName","playerLink","newFirstName","newLastName","newPosition","onNewFirstNameChange","onNewLastNameChange","onNewPosition","newPlayer","position","AllPlayers","listOfPlayers","getEveryPlayer","CreatePlayer_CreateLeague","SinglePlayer","getPlayer","singlePlayer","test_data","continents","countries","leagues","pyramidPos","proPos","relPos","trainingCeiling","trainingFloor","youthCeiling","youthFloor","clubs","trainingRating","youthRating","players","posAbr","age","skill","FreeAgentsView","handleFreeAgentClick","moveFreeAgentToCurrentClub","_this2","freeAgents","index","ContinentView","handleCountryClick","continent","country","CountryView","handleLeagueClick","LeagueTable","LeagueView","handleClubClick","LeagueTable_LeagueTable","ClubView","handleTakeControlClick","console","log","handleControlClick","handlePlayerClick","playerName","newIndex","indexFinder","attack","lineup","midfield","defense","goalkeeper","squadOverallSkill","squadAttackingSkill","squadDefendingSkill","bench","PlayerView","SimulationArena","season","year","partOfSeason","seasonValue","SimData","currentContinent","currentCountry","currentLeague","currentClub","currentPlayer","randomNames","showFreeAgents","userControlledClub","handleAdvanceSeason","createSeasonSchedule","simulateMatches","agePlayers","getName","randomName","nameItem","first","last","checkAndAddMissingPositions","goalDifferential","l","requiredPos","GK","LB","CB","RB","LM","CM","RM","ST","m","posNeedingToBeFilled","entries","n","createFillerPlayer","pop","strikers","striker1","striker2","stIndex","leftMidfielders","leftMidfielder1","lmIndex","centerMidfielders","centerMid1","centerMid2","cmIndex","rightMidfielders","rightMidfielder1","rmIndex","leftBacks","leftBack1","lbIndex","centerBacks","centerBack1","centerBack2","cbIndex","rightBacks","rightBack1","rbIndex","goalkeepers","goalkeeper1","gkIndex","count","p","lowestSkilledPlayer","lowestSkilledPlayerIndex","o","removedPlayer","splice","q","ovrSquadSkill","centerMidSkill","worstPlayer","worstIndex","pos","createYouthPlayer","clubYouthRating","calculateGoals","teamOffRating","oppTeamDefRating","ratingGap","possibleGoals","promotionPoints","relegationPoints","promotedClub","promotedClubGoalDiff","promotedClubGoalsFor","relegatedClub","relegatedClubGoalDiff","relegatedClubGoalsFor","promoteAndRelegateClubs","skillGainsThroughClubTraining","youthIntake","positionSelector","0","1","2","3","4","5","6","7","newPlayer1","newPlayer2","clubTrainingRating","skillGain","handleFreeAgentsViewClick","handleContinentClick","FreeAgentsView_FreeAgentsView","ContinentView_ContinentView","CountryView_CountryView","LeagueView_LeagueView","ClubView_ClubView","PlayerView_PlayerView","App","react_router","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"yPAGqBA,mLAGb,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAUJ,EAAAC,EAAAC,cAAA,0BACnBF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,SAAQJ,EAAAC,EAAAC,cAAA,wBACjBF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAUJ,EAAAC,EAAAC,cAAA,0BACnBF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,QAAOJ,EAAAC,EAAAC,cAAA,uCAVOG,4DCDlBC,6MACjBC,MAAQ,CACJC,QAAS,GACTC,mBAAoB,GACpBC,gBAAgB,EAChBC,gBAAgB,EAChBC,iBAAkB,MAGtBC,gBAAkB,SAACC,GACf,IAAMN,EAAUM,EAAEC,OAAOC,MACzBC,EAAKC,SAAS,CAAEV,eAGpBW,qBAAuB,SAACL,GACpB,IAAML,EAAqBK,EAAEC,OAAOC,MACpCC,EAAKC,SAAS,CAAET,0BAGpBW,iBAAmB,SAACN,GAChB,IAAMJ,EAAiBI,EAAEC,OAAOM,QAChCJ,EAAKC,SAAS,CAAER,sBAGpBY,iBAAmB,SAACR,GAChB,IAAMH,EAAiBG,EAAEC,OAAOM,QAChCJ,EAAKC,SAAS,CAAEP,sBAGpBY,mBAAqB,SAACT,GAClB,IAAMF,EAAmBE,EAAEC,OAAOC,MAClCC,EAAKC,SAAS,CAAEN,wBAGpBY,aAAe,SAACV,GACZA,EAAEW,iBACF,IAAMC,EAAY,CACdC,KAAMV,EAAKV,MAAMC,QACjBoB,gBAAiBC,OAAOZ,EAAKV,MAAME,oBACnCqB,YAAab,EAAKV,MAAMG,eACxBqB,YAAad,EAAKV,MAAMI,eACxBqB,cAAeH,OAAOZ,EAAKV,MAAMK,mBAErCK,EAAKgB,MAAMC,eAAeR,GAC1BT,EAAKkB,qBAGTA,gBAAkB,WACdlB,EAAKC,SAAS,CACVV,QAAS,GACTC,mBAAoB,GACpBC,gBAAgB,EAChBC,gBAAgB,EAChBC,iBAAkB,8EAKtB,OACIZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACIkC,SAAUC,KAAKb,cAEfxB,EAAAC,EAAAC,cAAA,SACIoC,KAAK,OACLC,YAAY,cACZC,SAAUH,KAAKxB,gBACfG,MAAOqB,KAAK9B,MAAMC,UAEtBR,EAAAC,EAAAC,cAAA,SACIoC,KAAK,SACLC,YAAY,sBACZC,SAAUH,KAAKlB,qBACfH,MAAOqB,KAAK9B,MAAME,qBAEtBT,EAAAC,EAAAC,cAAA,SACIoC,KAAK,WACLE,SAAUH,KAAKjB,iBACfJ,OAAQqB,KAAK9B,MAAMG,iBACrBV,EAAAC,EAAAC,cAAA,0BACFF,EAAAC,EAAAC,cAAA,SACIoC,KAAK,WACLE,SAAUH,KAAKf,iBACfN,MAAOqB,KAAK9B,MAAMI,iBACpBX,EAAAC,EAAAC,cAAA,2BACFF,EAAAC,EAAAC,cAAA,SACIoC,KAAK,SACLC,YAAY,kBACZC,SAAUH,KAAKd,mBACfP,MAAOqB,KAAK9B,MAAMK,mBAEtBZ,EAAAC,EAAAC,cAAA,SACIoC,KAAK,oBA5FajC,aCGrBoC,6MACjBlC,MAAQ,CACJmC,cAAe,GACfC,gBAAgB,KAQpBC,gCAAa,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAA9C,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOC,IAAMC,IAAI,gBADjB,OACLP,EADKG,EAAAK,KAETrC,EAAKC,SAAS,CAAEwB,cAAeI,EAAIS,OAF1B,wBAAAN,EAAAO,SAAAX,QAKbY,cAAgB,WACZ,IAAMC,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAcf,gBAAkB1B,EAAKV,MAAMoC,eAC3C1B,EAAKC,SAASwC,MAGlBxB,eAAiB,SAACR,GACd0B,IAAMS,KAAK,eAAgBnC,GAC3BT,EAAK2B,iGAhBLP,KAAKO,8CAqBL,OACI5C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ4D,QAASzB,KAAKoB,eAAtB,iBACCpB,KAAK9B,MAAMoC,eACR3C,EAAAC,EAAAC,cAAC6D,EAAD,CACI7B,eAAgBG,KAAKH,iBAEvB,KAELG,KAAK9B,MAAMmC,cAAcsB,IAAI,SAACC,GAC3B,IAAIC,EAAU,WAAAC,OAAcF,EAAOG,KACnC,OACIpE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAI8D,EAAYG,IAAKJ,EAAOG,KAAKpE,EAAAC,EAAAC,cAAA,UAAK+D,EAAOtC,iBAzCnCtB,8BCAnBiE,6MACjB/D,MAAQ,CACJgE,SAAU,GACVC,YAAa,MAIjBC,eAAiB,WAKb,IAJA,IAAIC,EAAWzD,EAAKgB,MAAMyC,SACtBH,EAAW,GACXI,EAAO,EACPH,EAAcE,EACTE,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IACjC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAASG,OAAQC,IAC7BJ,EAASE,GAAGR,MAAQM,EAASI,GAAGV,MAChCG,EAASQ,KAAK,CAAEC,KAAMN,EAASE,GAAIK,KAAMP,EAASI,GAAIH,KAAMA,EAAMO,MAAO,CAACF,KAAM,GAAIC,KAAM,MAC1FN,KAIZ,IAAK,IAAIQ,EAAI,EAAGA,EAAIX,EAAYK,OAAQM,IACpCX,EAAYW,GAAGC,OAAS,EACxBZ,EAAYW,GAAGE,KAAO,EACtBb,EAAYW,GAAGG,MAAQ,EACvBd,EAAYW,GAAGI,OAAS,EACxBf,EAAYW,GAAGK,SAAW,EAC1BhB,EAAYW,GAAGM,aAAe,EAElCxE,EAAKC,SAAS,CAAEqD,WAAUC,mBAG9BkB,aAAe,SAACC,GACZ,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,OAGjDI,gBAAkB,WAEd,IADA,IAAMrC,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAO1C,EAAKV,OACtBqE,EAAI,EAAGA,EAAIlB,EAAca,SAASM,OAAQD,IAC/ClB,EAAca,SAASK,GAAGM,MAAMD,KAAOhE,EAAKyE,aAAa,GACzDhC,EAAca,SAASK,GAAGM,MAAMF,KAAO/D,EAAKyE,aAAa,GACzDhC,EAAca,SAASK,GAAGI,KAAKQ,UAAY9B,EAAca,SAASK,GAAGM,MAAMF,KAC3EtB,EAAca,SAASK,GAAGI,KAAKS,cAAgB/B,EAAca,SAASK,GAAGM,MAAMD,KAC/EvB,EAAca,SAASK,GAAGK,KAAKO,UAAY9B,EAAca,SAASK,GAAGM,MAAMD,KAC3EvB,EAAca,SAASK,GAAGK,KAAKQ,cAAgB/B,EAAca,SAASK,GAAGM,MAAMF,KAC3EtB,EAAca,SAASK,GAAGM,MAAMF,OAAStB,EAAca,SAASK,GAAGM,MAAMD,MACzEvB,EAAca,SAASK,GAAGI,KAAKM,QAC/B5B,EAAca,SAASK,GAAGI,KAAKI,SAC/B1B,EAAca,SAASK,GAAGK,KAAKK,QAC/B5B,EAAca,SAASK,GAAGK,KAAKG,UACxB1B,EAAca,SAASK,GAAGM,MAAMF,KAAOtB,EAAca,SAASK,GAAGM,MAAMD,MAC9EvB,EAAca,SAASK,GAAGI,KAAKK,OAC/B3B,EAAca,SAASK,GAAGI,KAAKI,QAAU,EACzC1B,EAAca,SAASK,GAAGK,KAAKM,WAE/B7B,EAAca,SAASK,GAAGK,KAAKI,OAC/B3B,EAAca,SAASK,GAAGK,KAAKG,QAAU,EACzC1B,EAAca,SAASK,GAAGI,KAAKO,UAGvCtE,EAAKC,SAASwC,4EAId,IAAIa,EAAWlC,KAAK9B,MAAMgE,SACpBhB,EAAOlB,KAAK9B,MAAMiE,YAsCxB,OACIxE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sBACEqE,EAASM,OAML7E,EAAAC,EAAAC,cAAA,UACE4D,QAASzB,KAAK0D,iBADhB,mBALF/F,EAAAC,EAAAC,cAAA,UACI4D,QAASzB,KAAKoC,gBADlB,mBAoBJzE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCqE,EAASM,OACN7E,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,CACIgG,UAAU,QACVC,MAAM,eACNC,QAnEA,CACZ,CACIxE,KAAM,OACNyE,SAAU,OACVC,UAAU,GAEd,CACI1E,KAAM,SACNyE,SAAU,SACVC,UAAU,GAEd,CACI1E,KAAM,OACNyE,SAAU,OACVC,UAAU,GAEd,CACI1E,KAAM,QACNyE,SAAU,QACVC,UAAU,GAEd,CACI1E,KAAM,SACNyE,SAAU,SACVC,UAAU,GAEd,CACI1E,KAAM,KACNyE,SAAU,WACVC,UAAU,GAEd,CACI1E,KAAM,KACNyE,SAAU,eACVC,UAAU,IAkCF9C,KAAMA,EACN+C,MAAM,SAGR,aAzIgBjG,aCAjBkG,6MACjBhG,MAAQ,CACJ0D,OAAQ,GACRuC,aAAc,GACd9B,SAAU,GACV+B,cAAe,GACfC,aAAc,GACdC,qBAAqB,EACrBC,wBAAyB,KAQ7BC,+BAAY,SAAAhE,IAAA,IAAAiE,EAAAhE,EAAAiE,EAAA,OAAAhE,EAAA9C,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACJ2D,EAAW7F,EAAKgB,MAAM+E,MAAMC,OAAOH,SAD/B7D,EAAAE,KAAA,EAEQC,IAAMC,IAAN,eAAAc,OAAyB2C,IAFjC,cAEJhE,EAFIG,EAAAK,KAAAL,EAAAE,KAAA,EAGcC,IAAMC,IAAI,cAHxB,OAGJ0D,EAHI9D,EAAAK,KAIRrC,EAAKC,SAAS,CAAE+C,OAAQnB,EAAIS,KAAK2D,aAAcV,aAAc1D,EAAIS,KAAKmB,SAAUA,SAAUqC,EAAUxD,KAAMkD,cAAeM,EAAUxD,OAJ3H,wBAAAN,EAAAO,SAAAX,QAOZsE,eAAiB,SAACrG,GACd,IAAIsG,EAAStG,EAAEC,OAAOC,MAClB0F,EAAezF,EAAKV,MAAMmE,SAAS2C,OAAO,SAACC,GAC3C,OAAOA,EAAKlD,MAAQgD,IACrB,GACHnG,EAAKC,SAAS,CAACwF,oBAGnBa,eAAiB,SAACzG,GACdA,EAAEW,iBACF,IAAI6F,EAAOrG,EAAKV,MAAMmG,aACtBY,EAAKR,SAAW7F,EAAKV,MAAM0D,OAAOG,IAClChB,IAAMoE,IAAN,aAAArD,OAAuBmD,EAAKlD,KAAOkD,GACnCrG,EAAK4F,eAGTY,kBAAoB,WAChB,IAAM/D,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAciD,qBAAuB1F,EAAKV,MAAMoG,oBAChD1F,EAAKC,SAASwC,GACVzC,EAAKV,MAAMoG,oBACX1F,EAAKyG,cAELzG,EAAK0G,kBAIbD,YAAc,WACV,IAAIjB,EAAgBxF,EAAKV,MAAMmE,SAAS2C,OAAO,SAACC,GAC5C,OAAOA,EAAKR,WAAa7F,EAAKV,MAAM0D,OAAOG,MAE/CnD,EAAKC,SAAS,CAAEuF,qBAGpBkB,aAAe,WACX,IAAIlB,EAAgBxF,EAAKV,MAAMmE,SAC/BzD,EAAKC,SAAS,CAAEuF,sGA9ChBpE,KAAKwE,6CAkDL,OACI7G,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKmC,KAAK9B,MAAM0D,OAAOtC,MACvB3B,EAAAC,EAAAC,cAAA,QACIkC,SAAUC,KAAKkF,gBAEfvH,EAAAC,EAAAC,cAAA,UACIsC,SAAUH,KAAK8E,gBAEfnH,EAAAC,EAAAC,cAAA,UACIc,MAAO,MACTqB,KAAK9B,MAAMkG,cAAc5B,OAAS,sBAAwB,4BAC3DxC,KAAK9B,MAAMkG,cAAczC,IAAI,SAACsD,GAC3B,OACItH,EAAAC,EAAAC,cAAA,UAAQc,MAAOsG,EAAKlD,IAAKC,IAAK,gBAAkBiD,EAAKlD,KAAMkD,EAAK3F,SAI5E3B,EAAAC,EAAAC,cAAA,SACIoC,KAAK,SACLsF,UAAWvF,KAAK9B,MAAMmG,gBAG9B1G,EAAAC,EAAAC,cAAA,UACI4D,QAASzB,KAAKoF,mBAEbpF,KAAK9B,MAAMoG,oBAAX,QAAAxC,OAAyC9B,KAAK9B,MAAM0D,OAAOtC,KAA3D,UAA0E,kBAE/E3B,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,UACKmC,KAAK9B,MAAMiG,aAAaxC,IAAI,SAACsD,GAC1B,IAAIO,EAAQ,SAAA1D,OAAYmD,EAAKlD,KAC7B,OACIpE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAIyH,EAAUxD,IAAKiD,EAAKlD,KAAKpE,EAAAC,EAAAC,cAAA,UAAKoH,EAAK3F,UAIzD3B,EAAAC,EAAAC,cAAC4H,EAAD,CAAUpD,SAAUrC,KAAK9B,MAAMiG,uBApGLnG,aCHrB0H,6MACjBxH,MAAQ,CACJC,QAAS,MAGbK,gBAAkB,SAACC,GACf,IAAMN,EAAUM,EAAEC,OAAOC,MACzBC,EAAKC,SAAS,CAAEV,eAGpBgB,aAAe,SAACV,GACZA,EAAEW,iBACF,IAAMuG,EAAU,CACZrG,KAAMV,EAAKV,MAAMC,SAErBS,EAAKgB,MAAMC,eAAe8F,GAC1B/G,EAAKkB,qBAGTA,gBAAkB,WACdlB,EAAKC,SAAS,CACVV,QAAS,8EAKb,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACIkC,SAAUC,KAAKb,cAEfxB,EAAAC,EAAAC,cAAA,SACIoC,KAAK,OACLC,YAAY,YACZC,SAAUH,KAAKxB,gBACfG,MAAOqB,KAAK9B,MAAMC,UAEtBR,EAAAC,EAAAC,cAAA,SACIoC,KAAK,oBAtCWjC,aCGnB4H,6MACjB1H,MAAQ,CACJ2H,YAAa,GACbvF,gBAAgB,KAQpBwF,8BAAW,SAAAtF,IAAA,IAAAC,EAAA,OAAAC,EAAA9C,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSC,IAAMC,IAAI,cADnB,OACHP,EADGG,EAAAK,KAEPrC,EAAKC,SAAS,CAAEgH,YAAapF,EAAIS,OAF1B,wBAAAN,EAAAO,SAAAX,QAKXY,cAAgB,WACZ,IAAMC,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAcf,gBAAkB1B,EAAKV,MAAMoC,eAC3C1B,EAAKC,SAASwC,MAGlBxB,eAAiB,SAAC8F,GACd5E,IAAMS,KAAK,aAAcmE,GACzB/G,EAAKkH,+FAhBL9F,KAAK8F,4CAoBL,OACInI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ4D,QAASzB,KAAKoB,eAAtB,eACCpB,KAAK9B,MAAMoC,eACR3C,EAAAC,EAAAC,cAACkI,EAAD,CACIlG,eAAgBG,KAAKH,iBAEvB,KAELG,KAAK9B,MAAM2H,YAAYlE,IAAI,SAACsD,GACzB,IAAIO,EAAQ,SAAA1D,OAAYmD,EAAKlD,KAC7B,OACIpE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAIyH,EAAUxD,IAAKiD,EAAKlD,KAAKpE,EAAAC,EAAAC,cAAA,UAAKoH,EAAK3F,iBAxC/BtB,aCDjBgI,6MACjB9H,MAAQ,CACJ+G,KAAM,GACNgB,eAAgB,GAChBC,WAAY,GACZC,gBAAiB,GACjBC,eAAgB,GAChB9B,qBAAqB,KAQzB+B,6BAAU,SAAA7F,IAAA,IAAAuE,EAAAtE,EAAAiE,EAAA,OAAAhE,EAAA9C,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACFiE,EAASnG,EAAKgB,MAAM+E,MAAMC,OAAOG,OAD/BnE,EAAAE,KAAA,EAEUC,IAAMC,IAAN,aAAAc,OAAuBiD,IAFjC,cAEFtE,EAFEG,EAAAK,KAAAL,EAAAE,KAAA,EAGgBC,IAAMC,IAAI,gBAH1B,OAGF0D,EAHE9D,EAAAK,KAINrC,EAAKC,SAAS,CAAEoG,KAAMxE,EAAIS,KAAKoF,WAAYL,eAAgBxF,EAAIS,KAAKgF,WAAYA,WAAYxB,EAAUxD,KAAMiF,gBAAiBzB,EAAUxD,OAJjI,wBAAAN,EAAAO,SAAAX,QAOVsE,eAAiB,SAACrG,GACd,IAAI8H,EAAW9H,EAAEC,OAAOC,MACpByH,EAAiBxH,EAAKV,MAAMgI,WAAWlB,OAAO,SAACwB,GAC/C,OAAOA,EAAOzE,MAAQwE,IACvB,GACH3H,EAAKC,SAAS,CAACuH,sBAGnBlB,eAAiB,SAACzG,GACdA,EAAEW,iBACF,IAAIoH,EAAS5H,EAAKV,MAAMkI,eACxBI,EAAOzB,OAASnG,EAAKV,MAAM+G,KAAKlD,IAChChB,IAAMoE,IAAN,eAAArD,OAAyB0E,EAAOzE,KAAOyE,GACvC5H,EAAKyH,aAGTI,oBAAsB,WAClB,IAAMpF,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAciD,qBAAuB1F,EAAKV,MAAMoG,oBAChD1F,EAAKC,SAASwC,GACVzC,EAAKV,MAAMoG,oBACX1F,EAAK8H,gBAEL9H,EAAK+H,oBAIbD,cAAgB,WACZ,IAAIP,EAAkBvH,EAAKV,MAAMgI,WAAWlB,OAAO,SAACwB,GAChD,OAAOA,EAAOzB,SAAWnG,EAAKV,MAAM+G,KAAKlD,MAE7CnD,EAAKC,SAAS,CAAEsH,uBAGpBQ,eAAiB,WACb,IAAIR,EAAkBvH,EAAKV,MAAMgI,WACjCtH,EAAKC,SAAS,CAAEsH,wGA9ChBnG,KAAKqG,2CAmDL,OACI1I,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKmC,KAAK9B,MAAM+G,KAAK3F,MACrB3B,EAAAC,EAAAC,cAAA,QACIkC,SAAUC,KAAKkF,gBAEfvH,EAAAC,EAAAC,cAAA,UACIsC,SAAUH,KAAK8E,gBAEfnH,EAAAC,EAAAC,cAAA,UACIc,MAAO,MACTqB,KAAK9B,MAAMiI,gBAAgB3D,OAAS,wBAA0B,8BAC/DxC,KAAK9B,MAAMiI,gBAAgBxE,IAAI,SAAC6E,GAC7B,OACI7I,EAAAC,EAAAC,cAAA,UAAQc,MAAO6H,EAAOzE,IAAKC,IAAK,gBAAkBwE,EAAOzE,KAAMyE,EAAOI,UAAtE,IAAkFJ,EAAOK,aAIrGlJ,EAAAC,EAAAC,cAAA,SACIoC,KAAK,SACLsF,UAAWvF,KAAK9B,MAAMkI,kBAG9BzI,EAAAC,EAAAC,cAAA,UACQ4D,QAASzB,KAAKyG,qBAEjBzG,KAAK9B,MAAMoG,oBAAX,QAAAxC,OAAyC9B,KAAK9B,MAAM+G,KAAK3F,KAAzD,YAA0E,oBAE/E3B,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,UACKmC,KAAK9B,MAAM+H,eAAetE,IAAI,SAAC6E,GAC5B,IAAIM,EAAU,WAAAhF,OAAc0E,EAAOzE,KACnC,OACIpE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAI+I,EAAY9E,IAAKwE,EAAOzE,KAAKpE,EAAAC,EAAAC,cAAA,UAAK2I,EAAOI,UAAZ,IAAwBJ,EAAOK,sBAhG1D7I,aCFnBC,6MACjBC,MAAQ,CACJ6I,aAAc,GACdC,YAAa,GACbC,YAAa,MAGjBC,qBAAuB,SAACzI,GACpB,IAAMsI,EAAetI,EAAEC,OAAOC,MAC9BC,EAAKC,SAAS,CAAEkI,oBAGpBI,oBAAsB,SAAC1I,GACnB,IAAMuI,EAAcvI,EAAEC,OAAOC,MAC7BC,EAAKC,SAAS,CAAEmI,mBAGpBI,cAAgB,SAAC3I,GACb,IAAMwI,EAAcxI,EAAEC,OAAOC,MAC7BC,EAAKC,SAAS,CAAEoI,mBAGpB9H,aAAe,SAACV,GACZA,EAAEW,iBACF,IAAMiI,EAAY,CACdT,UAAWhI,EAAKV,MAAM6I,aACtBF,SAAUjI,EAAKV,MAAM8I,YACrBM,SAAU1I,EAAKV,MAAM+I,aAEzBrI,EAAKgB,MAAMC,eAAewH,GAC1BzI,EAAKkB,qBAGTA,gBAAkB,WACdlB,EAAKC,SAAS,CACVkI,aAAc,GACdC,YAAa,GACbC,YAAa,8EAKjB,OACItJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QACIkC,SAAUC,KAAKb,cAEfxB,EAAAC,EAAAC,cAAA,SACIoC,KAAK,OACLC,YAAY,aACZC,SAAUH,KAAKkH,qBACfvI,MAAOqB,KAAK9B,MAAM6I,eAEtBpJ,EAAAC,EAAAC,cAAA,SACIoC,KAAK,OACLC,YAAY,YACZC,SAAUH,KAAKmH,oBACfxI,MAAOqB,KAAK9B,MAAM8I,cAEtBrJ,EAAAC,EAAAC,cAAA,SACIoC,KAAK,OACLC,YAAY,WACZC,SAAUH,KAAKoH,cACfzI,MAAOqB,KAAK9B,MAAM+I,cAEtBtJ,EAAAC,EAAAC,cAAA,SACIoC,KAAK,oBAlEajC,aCGrBuJ,6MACjBrJ,MAAQ,CACJsJ,cAAe,GACflH,gBAAgB,KAOpBmH,oCAAiB,SAAAjH,IAAA,IAAAC,EAAA,OAAAC,EAAA9C,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,IAAMC,IAAI,gBADb,OACTP,EADSG,EAAAK,KAEbrC,EAAKC,SAAS,CAAE2I,cAAe/G,EAAIS,OAFtB,wBAAAN,EAAAO,SAAAX,QAKjBY,cAAgB,WACZ,IAAMC,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAcf,gBAAkB1B,EAAKV,MAAMoC,eAC3C1B,EAAKC,SAASwC,MAGlBxB,eAAiB,SAACwH,GACdtG,IAAMS,KAAK,eAAgB6F,GAC3BzI,EAAK6I,qGAhBLzH,KAAKyH,kDAqBL,OACI9J,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ4D,QAASzB,KAAKoB,eAAtB,iBACCpB,KAAK9B,MAAMoC,eACR3C,EAAAC,EAAAC,cAAC6J,EAAD,CACI7H,eAAgBG,KAAKH,iBAEvB,KAELG,KAAK9B,MAAMsJ,cAAc7F,IAAI,SAAC6E,GAC3B,IAAIM,EAAU,WAAAhF,OAAc0E,EAAOzE,KACnC,OACIpE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAI+I,EAAY9E,IAAKwE,EAAOzE,KAAKpE,EAAAC,EAAAC,cAAA,UAAK2I,EAAOI,UAAZ,IAAwBJ,EAAOK,qBAxCtD7I,aCFnB2J,6MACjBzJ,MAAQ,CACJsI,OAAQ,MAOZoB,+BAAY,SAAApH,IAAA,IAAA+F,EAAA9F,EAAA,OAAAC,EAAA9C,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACJyF,EAAW3H,EAAKgB,MAAM+E,MAAMC,OAAO2B,SAD/B3F,EAAAE,KAAA,EAEQC,IAAMC,IAAN,eAAAc,OAAyByE,IAFjC,OAEJ9F,EAFIG,EAAAK,KAGRrC,EAAKC,SAAS,CAAE2H,OAAQ/F,EAAIS,KAAK2G,eAHzB,wBAAAjH,EAAAO,SAAAX,yFAHRR,KAAK4H,6CASL,OACIjK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKmC,KAAK9B,MAAMsI,OAAOI,UAAvB,IAAmC5G,KAAK9B,MAAMsI,OAAOK,kBAjB3B7I,aCH3B8J,EAAA,CACXC,WAAY,CACR,CACIzI,KAAM,SACN0I,UAAW,IAEf,CACI1I,KAAM,OACN0I,UAAW,IAEf,CACI1I,KAAM,SACN0I,UAAW,CACP,CACI1I,KAAM,UACN2I,QAAS,CACL,CACI3I,KAAM,iBACN4I,WAAY,EACZC,QAAQ,EACRC,QAAQ,EACRC,gBAAiB,GACjBC,cAAe,GACfC,aAAc,GACdC,WAAY,GACZC,MAAO,CACH,CACInJ,KAAM,oBACNoJ,eAAgB,GAChBC,YAAa,GACbC,QAAS,CACL,CACItJ,KAAM,aACNgI,SAAU,UACVuB,OAAQ,KACRC,IAAK,GACLC,MAAO,IAEX,CACIzJ,KAAM,YACNgI,SAAU,kBACVuB,OAAQ,KACRC,IAAK,GACLC,MAAO,IAEX,CACIzJ,KAAM,cACNgI,SAAU,qBACVuB,OAAQ,KACRC,IAAK,GACLC,MAAO,IAEX,CACIzJ,KAAM,cACNgI,SAAU,aACVuB,OAAQ,KACRC,IAAK,GACLC,MAAO,IAEX,CACIzJ,KAAM,kBACNgI,SAAU,aACVuB,OAAQ,KACRC,IAAK,GACLC,MAAO,IAEX,CACIzJ,KAAM,cACNgI,SAAU,aACVuB,OAAQ,KACRC,IAAK,GACLC,MAAO,MAInB,CACIzJ,KAAM,UACNoJ,eAAgB,GAChBC,YAAa,GACbC,QAAS,CACL,CACItJ,KAAM,4BACNgI,SAAU,UACVuB,OAAQ,KACRC,IAAK,GACLC,MAAO,MAInB,CACIzJ,KAAM,UACNoJ,eAAgB,GAChBC,YAAa,GACbC,QAAS,CACL,CACItJ,KAAI,eACJgI,SAAU,qBACVuB,OAAQ,KACRC,IAAK,GACLC,MAAO,QAM3B,CACIzJ,KAAM,mBACN4I,WAAY,EACZC,QAAQ,EACRC,QAAQ,EACRC,gBAAiB,GACjBC,cAAe,GACfC,aAAc,GACdC,WAAY,GACZC,MAAO,CACH,CACInJ,KAAM,eACNoJ,eAAgB,GAChBC,YAAa,GACbC,QAAS,IAEb,CACItJ,KAAM,UACNoJ,eAAgB,GAChBC,YAAa,GACbC,QAAS,IAEb,CACItJ,KAAM,aACNoJ,eAAgB,GAChBC,YAAa,GACbC,QAAS,MAIrB,CACItJ,KAAM,eACN4I,WAAY,EACZC,QAAQ,EACRC,QAAQ,EACRC,gBAAiB,GACjBC,cAAe,GACfC,aAAc,GACdC,WAAY,GACZC,MAAO,CACH,CACInJ,KAAM,gBACNoJ,eAAgB,GAChBC,YAAa,GACbC,QAAS,IAEb,CACItJ,KAAM,eACNoJ,eAAgB,GAChBC,YAAa,GACbC,QAAS,IAEb,CACItJ,KAAM,aACNoJ,eAAgB,GAChBC,YAAa,GACbC,QAAS,MAIrB,CACItJ,KAAM,eACN4I,WAAY,EACZC,QAAQ,EACRC,QAAQ,EACRC,gBAAiB,GACjBC,cAAe,EACfC,aAAc,GACdC,WAAY,EACZC,MAAO,CACH,CACInJ,KAAM,gBACNoJ,eAAgB,EAChBC,YAAa,EACbC,QAAS,IAEb,CACItJ,KAAM,uBACNoJ,eAAgB,GAChBC,YAAa,GACbC,QAAS,IAEb,CACItJ,KAAM,gBACNoJ,eAAgB,EAChBC,YAAa,EACbC,QAAS,UAQrC,CACItJ,KAAM,gBACN0I,UAAW,IAGf,CACI1I,KAAM,UACN0I,UAAW,IAEf,CACI1I,KAAM,gBACN0I,UAAW,MChNFgB,6MAEjBC,qBAAuB,SAACxK,GACpBG,EAAKgB,MAAMsJ,2BAA2BzK,EAAEC,OAAOC,gFAI1C,IAAAwK,EAAAnJ,KACL,OACIrC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BACCmC,KAAKJ,MAAMwJ,WAAW5G,OACnB7E,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,mBACV5D,KAAKJ,MAAMwJ,WAAWzH,IAAI,SAAC6E,EAAQ6C,GAChC,OACI1L,EAAAC,EAAAC,cAAA,UACImE,IAAG,MAAAF,OAAQ0E,EAAOlH,KAAf,KAAAwC,OAAuBuH,GAC1B5H,QAAS0H,EAAKF,qBACdtK,MAAO0K,GAEN7C,EAAOlH,KALZ,MAKqBkH,EAAOqC,OAL5B,MAKuCrC,EAAOuC,UAKxDpL,EAAAC,EAAAC,cAAA,uDAzBsBG,aCAvBsL,6MAEjBC,mBAAqB,SAAC9K,GAClBG,EAAKgB,MAAM2J,mBAAmB9K,EAAEC,OAAOC,gFAGlC,IAAAwK,EAAAnJ,KACL,OACIrC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BAAkBmC,KAAKJ,MAAM4J,UAAUlK,MACvC3B,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,cACX5D,KAAKJ,MAAM4J,UAAUxB,UAAUrG,IAAI,SAAC8H,EAASJ,GACzC,OACI1L,EAAAC,EAAAC,cAAA,UACImE,IAAG,WAAAF,OAAauH,EAAQ,GACxB5H,QAAS0H,EAAKI,mBACd5K,MAAO0K,GAENI,EAAQnK,iBAlBEtB,aCAtB0L,6MAEjBC,kBAAoB,SAAClL,GACjBG,EAAKgB,MAAM+J,kBAAkBlL,EAAEC,OAAOC,gFAGjC,IAAAwK,EAAAnJ,KACL,OACIrC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBAAgBmC,KAAKJ,MAAM6J,QAAQnK,MACnC3B,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,cACX5D,KAAKJ,MAAM6J,QAAQxB,QAAQtG,IAAI,SAACC,EAAQyH,GACpC,OACI1L,EAAAC,EAAAC,cAAA,UACImE,IAAG,UAAAF,OAAYuH,EAAQ,GACvB5H,QAAS0H,EAAKQ,kBACdhL,MAAO0K,GAENzH,EAAOtC,iBAlBCtB,aCCpB4L,mLAGb,IAAM1I,EAAOlB,KAAKJ,MAAMgC,OAAO6G,MA2C/B,OACI9K,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,CACIgG,UAAU,QACVC,MAAM,eACNC,QAhDI,CACZ,CACIxE,KAAM,OACNyE,SAAU,OACVC,UAAU,GAEd,CACI1E,KAAM,SACNyE,SAAU,SACVC,UAAU,GAEd,CACI1E,KAAM,OACNyE,SAAU,OACVC,UAAU,GAEd,CACI1E,KAAM,QACNyE,SAAU,QACVC,UAAU,GAEd,CACI1E,KAAM,SACNyE,SAAU,SACVC,UAAU,GAEd,CACI1E,KAAM,KACNyE,SAAU,mBACVC,UAAU,GAEd,CACI1E,KAAM,KACNyE,SAAU,WACVC,UAAU,GAEd,CACI1E,KAAM,KACNyE,SAAU,eACVC,UAAU,IAUN9C,KAAMA,EACN+C,MAAM,iBAtDejG,aCApB6L,6MAEjBC,gBAAkB,SAACrL,GACfG,EAAKgB,MAAMkK,gBAAgBrL,EAAEC,OAAOC,gFAG/B,IAAAwK,EAAAnJ,KACL,OACIrC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sBAAcmC,KAAKJ,MAAMgC,OAAOtC,MAChC3B,EAAAC,EAAAC,cAACkM,EAAD,CAAcnI,OAAQ5B,KAAKJ,MAAMgC,SACjCjE,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,cACX5D,KAAKJ,MAAMgC,OAAO6G,MAAM9G,IAAI,SAACsD,EAAMoE,GAC/B,OACI1L,EAAAC,EAAAC,cAAA,UACImE,IAAG,QAAAF,OAAUuH,EAAQ,GACrB5H,QAAS0H,EAAKW,gBACdnL,MAAO0K,GAENpE,EAAK3F,iBAnBEtB,aCDnBgM,6MAEjBC,uBAAyB,WACrBC,QAAQC,IAAR,uBAAArI,OAAmClD,EAAKgB,MAAMqF,KAAK3F,OACnDV,EAAKgB,MAAMwK,mBAAmBxL,EAAKgB,MAAMqF,SAG7CoF,kBAAoB,SAAC5L,GACjB,IAAM6L,EAAa7L,EAAEC,OAAOC,MAQtB4L,EAPc,WAChB,IAAK,IAAIhI,EAAI,EAAGA,EAAI3D,EAAKgB,MAAMqF,KAAK2D,QAAQpG,OAAQD,IAChD,GAAI3D,EAAKgB,MAAMqF,KAAK2D,QAAQrG,GAAGjD,OAASgL,EACpC,OAAO/H,EAIFiI,GACjB5L,EAAKgB,MAAMyK,kBAAkBE,4EAGxB,IAAApB,EAAAnJ,KACCyK,EAASzK,KAAKJ,MAAMqF,KAAKyF,OAAO1F,OAAO,SAAAwB,GACzC,MAAyB,OAAlBA,EAAOqC,SAEZ8B,EAAW3K,KAAKJ,MAAMqF,KAAKyF,OAAO1F,OAAO,SAAAwB,GAC3C,MAAyB,OAAlBA,EAAOqC,QAAqC,OAAlBrC,EAAOqC,QAAqC,OAAlBrC,EAAOqC,SAEhE+B,EAAU5K,KAAKJ,MAAMqF,KAAKyF,OAAO1F,OAAO,SAAAwB,GAC1C,MAAyB,OAAlBA,EAAOqC,QAAqC,OAAlBrC,EAAOqC,QAAqC,OAAlBrC,EAAOqC,SAEhEgC,EAAa7K,KAAKJ,MAAMqF,KAAKyF,OAAO1F,OAAO,SAAAwB,GAC7C,MAAyB,OAAlBA,EAAOqC,SAElB,OACIlL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKmC,KAAKJ,MAAMqF,KAAK3F,MACrB3B,EAAAC,EAAAC,cAAA,UAAQ4D,QAASzB,KAAKiK,wBAAtB,gBACAtM,EAAAC,EAAAC,cAAA,UAAKmC,KAAKJ,MAAMqF,KAAK3F,KAArB,qBAA6CU,KAAKJ,MAAMqF,KAAKyD,gBAC7D/K,EAAAC,EAAAC,cAAA,kCAA0BmC,KAAKJ,MAAMqF,KAAK6F,mBAC1CnN,EAAAC,EAAAC,cAAA,0BAAkBmC,KAAKJ,MAAMqF,KAAK8F,qBAClCpN,EAAAC,EAAAC,cAAA,2BAAmBmC,KAAKJ,MAAMqF,KAAK+F,qBACnCrN,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,UACXjG,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,UACV6G,EAAO9I,IAAI,SAAC6E,EAAQ6C,GACjB,OACI1L,EAAAC,EAAAC,cAAA,UACImE,IAAG,UAAAF,OAAYuH,EAAQ,GACvB5H,QAAS0H,EAAKkB,kBACd1L,MAAO6H,EAAOlH,MAEbkH,EAAOlH,SAKxB3B,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,YACV+G,EAAShJ,IAAI,SAAC6E,EAAQ6C,GACnB,OACI1L,EAAAC,EAAAC,cAAA,UACImE,IAAG,UAAAF,OAAYuH,EAAQ,GACvB5H,QAAS0H,EAAKkB,kBACd1L,MAAO6H,EAAOlH,MAEbkH,EAAOlH,SAKxB3B,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,WACVgH,EAAQjJ,IAAI,SAAC6E,EAAQ6C,GAClB,OACI1L,EAAAC,EAAAC,cAAA,UACImE,IAAG,UAAAF,OAAYuH,EAAQ,GACvB5H,QAAS0H,EAAKkB,kBACd1L,MAAO6H,EAAOlH,MAEbkH,EAAOlH,SAKxB3B,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,cACViH,EAAWlJ,IAAI,SAAC6E,EAAQ6C,GACrB,OACI1L,EAAAC,EAAAC,cAAA,UACImE,IAAG,UAAAF,OAAYuH,EAAQ,GACvB5H,QAAS0H,EAAKkB,kBACd1L,MAAO6H,EAAOlH,MAEbkH,EAAOlH,UAM5B3B,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,SACN5D,KAAKJ,MAAMqF,KAAKgG,MAAMtJ,IAAI,SAAC6E,EAAQ6C,GAChC,OACI1L,EAAAC,EAAAC,cAAA,UACImE,IAAG,UAAAF,OAAYuH,EAAQ,GACvB5H,QAAS0H,EAAKkB,kBACd1L,MAAO6H,EAAOlH,MAEbkH,EAAOlH,iBAzGNtB,aCAjBkN,mLAEb,OACIvN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKmC,KAAKJ,MAAM4G,OAAOlH,MACvB3B,EAAAC,EAAAC,cAAA,UAAKmC,KAAKJ,MAAM4G,OAAOc,UACvB3J,EAAAC,EAAAC,cAAA,kBAAUmC,KAAKJ,MAAM4G,OAAOsC,KAC5BnL,EAAAC,EAAAC,cAAA,oBAAYmC,KAAKJ,MAAM4G,OAAOuC,eAPN/K,aCUnBmN,6MACjBjN,MAAQ,CACJkN,OAAQ,CACJC,KAAM,MAEVC,aAAc,CAAC,aAAc,SAAU,eACvCC,YAAa,EACbxD,WAAYyD,EAAQzD,WACpB0D,iBAAkB,GAClBC,eAAgB,GAChBC,cAAe,GACfC,YAAa,GACbC,cAAe,GACf7D,UAAW,GACXC,QAAS,GACTQ,MAAO,GACPG,QAAS,GACTkD,YAAa,GACb1C,WAAY,GACZ2C,gBAAgB,EAChBC,mBAAoB,MAGxBC,oBAAsB,WAClB,IAAM5K,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OACE,IAA9BmD,EAAckK,aACdlK,EAAckK,aAAe,EAC7B3M,EAAKsN,qBAAqB7K,IACW,IAA9BA,EAAckK,aACrBlK,EAAckK,aAAe,EAC7B3M,EAAKuN,gBAAgB9K,KAErBA,EAAc+J,OAAOC,MAAQ,EAC7BhK,EAAckK,YAAc,EAC5B3M,EAAKwN,WAAW/K,OAIxBgL,8CAAU,SAAA7L,EAAOa,GAAP,IAAAiL,EAAA/J,EAAAgK,EAAA,OAAA7L,EAAA9C,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAMF,IADIwL,EAAa,GACR/J,EAAI,EAAGA,EAAI,IAAKA,IACjBgK,EAAW,CACXjN,KAAM,CACFkN,MAAO,OACPC,KAAI,OAAA3K,OAASlD,EAAKV,MAAMkN,OAAOC,KAA3B,KAAAvJ,OAAmCS,EAAI,KAGnD+J,EAAW5J,KAAK6J,GAEpBlL,EAAcyK,YAAcQ,EAE5B1N,EAAK8N,4BAA4BrL,GAjB/B,wBAAAT,EAAAO,SAAAX,8DAqBV0L,qBAAuB,SAAC7K,GACpB,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAc0G,WAAWvF,OAAQD,IACjD,GAAIlB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OAAQC,IAC9D,GAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OACjD,IAAK,IAAIM,EAAI,EAAGA,EAAIzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OAAQM,IAAK,CAC9E,IAAIlB,EAASP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAC9DzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAW,GAK/D,IAJA,IAAIA,EAAWb,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAC/DG,EAAWT,EAAO6G,MAClB9D,EAAQ,EACRxC,EAAcE,EACTE,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IACjC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAASG,OAAQC,IAC7BJ,EAASE,GAAGjD,OAAS+C,EAASI,GAAGnD,OACjC4C,EAASQ,KAAK,CAAEC,KAAMN,EAASE,GAAIK,KAAMP,EAASI,GAAIkC,MAAOA,EAAO9B,MAAO,CAAEF,KAAM,GAAIC,KAAM,MAC7F+B,KAIZ,IAAK,IAAI7B,EAAI,EAAGA,EAAIX,EAAYK,OAAQM,IACpCX,EAAYW,GAAGC,OAAS,EACxBZ,EAAYW,GAAGE,KAAO,EACtBb,EAAYW,GAAGG,MAAQ,EACvBd,EAAYW,GAAGI,OAAS,EACxBf,EAAYW,GAAGK,SAAW,EAC1BhB,EAAYW,GAAGM,aAAe,EAC9BjB,EAAYW,GAAG6J,iBAAmB,EAO1D/N,EAAKyN,QAAQhL,MAGjBqL,4BAA8B,SAACrL,GAC3B,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAc0G,WAAWvF,OAAQD,IACjD,GAAIlB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OAAQC,IAC9D,GAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OACjD,IAAK,IAAIM,EAAI,EAAGA,EAAIzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OAAQM,IACzE,GAAIzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMjG,OAC1D,IAAK,IAAIoK,EAAI,EAAGA,EAAIvL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMjG,OAAQoK,IAAK,CAYvF,IAXA,IAAM3H,EAAO5D,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GACjEC,EAAc,CAChBC,GAAM,EACNC,GAAM,EACNC,GAAM,EACNC,GAAM,EACNC,GAAM,EACNC,GAAM,EACNC,GAAM,EACNC,GAAM,GAEDC,EAAI,EAAGA,EAAIrI,EAAK2D,QAAQpG,OAAQ8K,IACrCT,EAAY5H,EAAK2D,QAAQ0E,GAAGzE,SAAW,EAG3C,IADA,IAAM0E,EAAuBjM,OAAOkM,QAAQX,GACnCY,EAAI,EAAGA,EAAIF,EAAqB/K,OAAQiL,IACV,IAA/BF,EAAqBE,GAAG,KACxBxI,EAAK2D,QAAQlG,KAAK9D,EAAK8O,mBAAmBH,EAAqBE,GAAG,GAAIpM,EAAcyK,YAAY6B,QAChG1I,EAAK2D,QAAQlG,KAAK9D,EAAK8O,mBAAmBH,EAAqBE,GAAG,GAAIpM,EAAcyK,YAAY6B,SAEjE,IAA/BJ,EAAqBE,GAAG,IACxBxI,EAAK2D,QAAQlG,KAAK9D,EAAK8O,mBAAmBH,EAAqBE,GAAG,GAAIpM,EAAcyK,YAAY6B,QAMxG,IAAIjD,EAAS,GACTO,EAAQ,GAGR2C,EAAW3I,EAAK2D,QAAQ5D,OAAO,SAAAwB,GAC/B,MAAyB,OAAlBA,EAAOqC,SAElB,GAAI+E,EAASpL,OAAS,EAAG,CACrB,IAAIqL,OAAQ,EACRC,OAAQ,EACRF,EAAS,GAAG7E,OAAS6E,EAAS,GAAG7E,OACjC8E,EAAWD,EAAS,GACpBE,EAAWF,EAAS,KAEpBC,EAAWD,EAAS,GACpBE,EAAWF,EAAS,IAExB,IAAK,IAAIG,EAAU,EAAGA,EAAUH,EAASpL,OAAQuL,IACzCH,EAASG,GAAShF,MAAQ8E,EAAS9E,OACnC+E,EAAWD,EACXA,EAAWD,EAASG,IACbH,EAASG,GAAShF,MAAQ+E,EAAS/E,QAC1C+E,EAAWF,EAASG,IAG5BrD,EAAOhI,KAAKmL,GACZnD,EAAOhI,KAAKoL,GACZ,IAAK,IAAIC,EAAU,EAAGA,EAAUH,EAASpL,OAAQuL,IACzCH,EAASG,KAAaF,GAAYD,EAASG,KAAaD,GACxD7C,EAAMvI,KAAKkL,EAASG,SAI5BrD,EAAOhI,KAAKkL,EAAS,IACrBlD,EAAOhI,KAAKkL,EAAS,IAIzB,IAAII,EAAkB/I,EAAK2D,QAAQ5D,OAAO,SAAAwB,GACtC,MAAyB,OAAlBA,EAAOqC,SAElB,GAAImF,EAAgBxL,OAAS,EAAG,CAC5B,IAAIyL,OAAe,EAEfA,EADAD,EAAgB,GAAGjF,OAASiF,EAAgB,GAAGjF,MAC7BiF,EAAgB,GAEhBA,EAAgB,GAEtC,IAAK,IAAIE,EAAU,EAAGA,EAAUF,EAAgBxL,OAAQ0L,IAChDF,EAAgBE,GAASnF,MAAQkF,EAAgBlF,QACjDkF,EAAkBD,EAAgBE,IAG1CxD,EAAOhI,KAAKuL,GACZ,IAAK,IAAIC,EAAU,EAAGA,EAAUF,EAAgBxL,OAAQ0L,IAChDF,EAAgBE,KAAaD,GAC7BhD,EAAMvI,KAAKsL,EAAgBE,SAInCxD,EAAOhI,KAAKsL,EAAgB,IAIhC,IAAIG,EAAoBlJ,EAAK2D,QAAQ5D,OAAO,SAAAwB,GACxC,MAAyB,OAAlBA,EAAOqC,SAElB,GAAIsF,EAAkB3L,OAAS,EAAG,CAC9B,IAAI4L,OAAU,EACVC,OAAU,EACVF,EAAkB,GAAGpF,OAASoF,EAAkB,GAAGpF,OACnDqF,EAAaD,EAAkB,GAC/BE,EAAaF,EAAkB,KAE/BC,EAAaD,EAAkB,GAC/BE,EAAaF,EAAkB,IAEnC,IAAK,IAAIG,EAAU,EAAGA,EAAUH,EAAkB3L,OAAQ8L,IAClDH,EAAkBG,GAASvF,MAAQqF,EAAWrF,OAC9CsF,EAAaD,EACbA,EAAaD,EAAkBG,IACxBH,EAAkBG,GAASvF,MAAQsF,EAAWtF,QACrDsF,EAAaF,EAAkBG,IAGvC5D,EAAOhI,KAAK0L,GACZ1D,EAAOhI,KAAK2L,GACZ,IAAK,IAAIC,EAAU,EAAGA,EAAUH,EAAkB3L,OAAQ8L,IAClDH,EAAkBG,KAAaF,GAAcD,EAAkBG,KAAaD,GAC5EpD,EAAMvI,KAAKyL,EAAkBG,SAIrC5D,EAAOhI,KAAKyL,EAAkB,IAC9BzD,EAAOhI,KAAKyL,EAAkB,IAIlC,IAAII,EAAmBtJ,EAAK2D,QAAQ5D,OAAO,SAAAwB,GACvC,MAAyB,OAAlBA,EAAOqC,SAElB,GAAI0F,EAAiB/L,OAAS,EAAG,CAC7B,IAAIgM,OAAgB,EAEhBA,EADAD,EAAiB,GAAGxF,OAASwF,EAAiB,GAAGxF,MAC9BwF,EAAiB,GAEjBA,EAAiB,GAExC,IAAK,IAAIE,EAAU,EAAGA,EAAUF,EAAiB/L,OAAQiM,IACjDF,EAAiBE,GAAS1F,MAAQyF,EAAiBzF,QACnDyF,EAAmBD,EAAiBE,IAG5C/D,EAAOhI,KAAK8L,GACZ,IAAK,IAAIC,EAAU,EAAGA,EAAUF,EAAiB/L,OAAQiM,IACjDF,EAAiBE,KAAaD,GAC9BvD,EAAMvI,KAAK6L,EAAiBE,SAIpC/D,EAAOhI,KAAK6L,EAAiB,IAIjC,IAAIG,EAAYzJ,EAAK2D,QAAQ5D,OAAO,SAAAwB,GAChC,MAAyB,OAAlBA,EAAOqC,SAElB,GAAI6F,EAAUlM,OAAS,EAAG,CACtB,IAAImM,OAAS,EAETA,EADAD,EAAU,GAAG3F,OAAS2F,EAAU,GAAG3F,MACvB2F,EAAU,GAEVA,EAAU,GAE1B,IAAK,IAAIE,EAAU,EAAGA,EAAUF,EAAUlM,OAAQoM,IAC1CF,EAAUE,GAAS7F,MAAQ4F,EAAU5F,QACrC4F,EAAYD,EAAUE,IAG9BlE,EAAOhI,KAAKiM,GACZ,IAAK,IAAIC,EAAU,EAAGA,EAAUF,EAAUlM,OAAQoM,IAC1CF,EAAUE,KAAaD,GACvB1D,EAAMvI,KAAKgM,EAAUE,SAI7BlE,EAAOhI,KAAKgM,EAAU,IAI1B,IAAIG,EAAc5J,EAAK2D,QAAQ5D,OAAO,SAAAwB,GAClC,MAAyB,OAAlBA,EAAOqC,SAElB,GAAIgG,EAAYrM,OAAS,EAAG,CACxB,IAAIsM,OAAW,EACXC,OAAW,EACXF,EAAY,GAAG9F,OAAS8F,EAAY,GAAG9F,OACvC+F,EAAcD,EAAY,GAC1BE,EAAcF,EAAY,KAE1BC,EAAcD,EAAY,GAC1BE,EAAcF,EAAY,IAE9B,IAAK,IAAIG,EAAU,EAAGA,EAAUH,EAAYrM,OAAQwM,IAC5CH,EAAYG,GAASjG,MAAQ+F,EAAY/F,OACzCgG,EAAcD,EACdA,EAAcD,EAAYG,IACnBH,EAAYG,GAASjG,MAAQgG,EAAYhG,QAChDgG,EAAcF,EAAYG,IAGlCtE,EAAOhI,KAAKoM,GACZpE,EAAOhI,KAAKqM,GACZ,IAAK,IAAIC,EAAU,EAAGA,EAAUH,EAAYrM,OAAQwM,IAC5CH,EAAYG,KAAaF,GAAeD,EAAYG,KAAaD,GACjE9D,EAAMvI,KAAKmM,EAAYG,SAI/BtE,EAAOhI,KAAKmM,EAAY,IACxBnE,EAAOhI,KAAKmM,EAAY,IAI5B,IAAII,EAAahK,EAAK2D,QAAQ5D,OAAO,SAAAwB,GACjC,MAAyB,OAAlBA,EAAOqC,SAElB,GAAIoG,EAAWzM,OAAS,EAAG,CACvB,IAAI0M,OAAU,EAEVA,EADAD,EAAW,GAAGlG,OAASkG,EAAW,GAAGlG,MACxBkG,EAAW,GAEXA,EAAW,GAE5B,IAAK,IAAIE,EAAU,EAAGA,EAAUF,EAAWzM,OAAQ2M,IAC3CF,EAAWE,GAASpG,MAAQmG,EAAWnG,QACvCmG,EAAaD,EAAWE,IAGhCzE,EAAOhI,KAAKwM,GACZ,IAAK,IAAIC,EAAU,EAAGA,EAAUF,EAAWzM,OAAQ2M,IAC3CF,EAAWE,KAAaD,GACxBjE,EAAMvI,KAAKuM,EAAWE,SAI9BzE,EAAOhI,KAAKuM,EAAW,IAI3B,IAAIG,EAAcnK,EAAK2D,QAAQ5D,OAAO,SAAAwB,GAClC,MAAyB,OAAlBA,EAAOqC,SAElB,GAAIuG,EAAY5M,OAAS,EAAG,CACxB,IAAI6M,OAAW,EAEXA,EADAD,EAAY,GAAGrG,OAASqG,EAAY,GAAGrG,MACzBqG,EAAY,GAEZA,EAAY,GAE9B,IAAK,IAAIE,EAAU,EAAGA,EAAUF,EAAY5M,OAAQ8M,IAC5CF,EAAYE,GAASvG,MAAQsG,EAAYtG,QACzCsG,EAAcD,EAAYE,IAGlC5E,EAAOhI,KAAK2M,GACZ,IAAK,IAAIC,EAAU,EAAGA,EAAUF,EAAY5M,OAAQ8M,IAC5CF,EAAYE,KAAaD,GACzBpE,EAAMvI,KAAK0M,EAAYE,SAI/B5E,EAAOhI,KAAK0M,EAAY,IAO5B,GAJAnK,EAAKyF,OAASA,EACdzF,EAAKgG,MAAQA,EAGThG,EAAKgG,MAAMzI,OAAS,GAEpB,IADA,IAAI+M,EAAQtK,EAAKgG,MAAMzI,OAAS,GACvBgN,EAAI,EAAGA,EAAID,EAAOC,IAAK,CAG5B,IAFA,IAAIC,EAAsBxK,EAAKgG,MAAM,GACjCyE,EAA2B,EACtBC,EAAI,EAAGA,EAAI1K,EAAKgG,MAAMzI,OAAQmN,IAC/B1K,EAAKgG,MAAM0E,GAAG5G,MAAQ0G,EAAoB1G,QAC1C0G,EAAsBxK,EAAKgG,MAAM0E,GACjCD,EAA2BC,GAKnC,IAFA,IAAIC,EAAgB3K,EAAKgG,MAAM4E,OAAOH,EAA0B,GAAG,GAE1DI,GAAI,EAAGA,GAAI7K,EAAK2D,QAAQpG,OAAQsN,KACjC7K,EAAK2D,QAAQkH,MAAOF,IACpB3K,EAAK2D,QAAQiH,OAAOC,GAAG,GACvBA,IAAK,GAGbzO,EAAc+H,WAAW1G,KAAKkN,GAStC,IAJA,IAAIG,GACAhF,GAAsB,EACtBC,GAAsB,EACtBgF,GAAiB,EACZL,GAAI,EAAGA,GAAI1K,EAAKyF,OAAOlI,OAAQmN,KACN,OAA1B1K,EAAKyF,OAAOiF,IAAG9G,SACfmH,IAAkB/K,EAAKyF,OAAOiF,IAAG5G,OAGzCiH,GAAiBzM,KAAKC,MAAMwM,GAAiB,GAC7C,IAAK,IAAIL,GAAI,EAAGA,GAAI1K,EAAKyF,OAAOlI,OAAQmN,KACN,OAA1B1K,EAAKyF,OAAOiF,IAAG9G,QACW,OAA1B5D,EAAKyF,OAAOiF,IAAG9G,QACW,OAA1B5D,EAAKyF,OAAOiF,IAAG9G,SACfkC,IAAuB9F,EAAKyF,OAAOiF,IAAG5G,OAG9CgC,GAAsBxH,KAAKC,OAAOuH,GAAsBiF,IAAkB,GAC1E,IAAK,IAAIL,GAAI,EAAGA,GAAI1K,EAAKyF,OAAOlI,OAAQmN,KACN,OAA1B1K,EAAKyF,OAAOiF,IAAG9G,QACW,OAA1B5D,EAAKyF,OAAOiF,IAAG9G,QACW,OAA1B5D,EAAKyF,OAAOiF,IAAG9G,QACW,OAA1B5D,EAAKyF,OAAOiF,IAAG9G,SACfmC,IAAuB/F,EAAKyF,OAAOiF,IAAG5G,OAG9CiC,GAAsBzH,KAAKC,OAAOwH,GAAsBgF,IAAkB,GAC1ED,GAAgBxM,KAAKC,OAAOuH,GAAsBC,IAAuB,GACzE/F,EAAK6F,kBAAoBiF,GACzB9K,EAAK8F,oBAAsBA,GAC3B9F,EAAK+F,oBAAsBA,GASvD,IAAK,IAAIzI,GAAI,EAAGA,GAAIlB,EAAc+H,WAAW5G,OAAQD,KAC7ClB,EAAc+H,WAAW7G,IAAGuG,KAAO,KACnCzH,EAAc+H,WAAWyG,OAAOtN,GAAG,GACnCA,IAAK,GAIb,GAAIlB,EAAc+H,WAAW5G,OAAS,GAElC,KAAOnB,EAAc+H,WAAW5G,OAAS,IAAI,CAIzC,IAFA,IAAIyN,GAAc5O,EAAc+H,WAAW,GACvC8G,GAAa,EACR3N,GAAI,EAAGA,GAAIlB,EAAc+H,WAAW5G,OAAQD,KAC7ClB,EAAc+H,WAAW7G,IAAGwG,MAAQkH,GAAYlH,QAChDkH,GAAc5O,EAAc+H,WAAW7G,IACvC2N,GAAa3N,IAIrBlB,EAAc+H,WAAWyG,OAAOK,GAAY,GAIpDtR,EAAKC,SAASwC,MAGlBqM,mBAAqB,SAACyC,EAAK7Q,GAmBvB,MAPkB,CACdA,KAZaA,EAAKA,KAAKkN,MAAQ,IAAMlN,EAAKA,KAAKmN,KAa/CnF,SAZY,CACZwF,GAAM,aACNC,GAAM,YACNC,GAAM,cACNC,GAAM,aACNC,GAAM,kBACNC,GAAM,qBACNC,GAAM,mBACNC,GAAM,WAIY8C,GAClBtH,OAAQsH,EACRrH,IAAK,GACLC,MAAO,OAKfqH,kBAAoB,SAACD,EAAK7Q,EAAM+Q,GAChB,OAARF,GACAjG,QAAQC,IAAI,uBAoBhB,MAPkB,CACd7K,KAZaA,EAAKA,KAAKkN,MAAQ,IAAMlN,EAAKA,KAAKmN,KAa/CnF,SAZY,CACZwF,GAAM,aACNC,GAAM,YACNC,GAAM,cACNC,GAAM,aACNC,GAAM,kBACNC,GAAM,qBACNC,GAAM,mBACNC,GAAM,WAIY8C,GAClBtH,OAAQsH,EACRrH,IAAK,GACLC,MAAOsH,MAKfhN,aAAe,SAACC,GACZ,OAAOC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,OAGjDgN,eAAiB,SAACC,EAAeC,GAC7B,IAAIC,EAAYF,EAAgBC,EAC5BE,EAAgB,GAmCpB,OAlCID,EAAY,KACZC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAE3DD,GAAa,IAAMA,EAAY,KAC/BC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5CD,GAAa,IAAMA,EAAY,KAC/BC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5CD,GAAa,IAAMA,EAAY,KAC/BC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5CD,GAAa,IAAMA,EAAY,KAC/BC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5CD,GAAa,IAAMA,EAAY,KAC/BC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5CD,GAAa,IAAMA,IAAc,KACjCC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5CD,GAAa,IAAMA,IAAc,KACjCC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5CD,GAAa,IAAMA,IAAc,KACjCC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5CD,GAAa,IAAMA,IAAc,KACjCC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE5CD,GAAa,KACbC,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGzCA,EAAc9R,EAAKyE,aAAaqN,EAAclO,YAGzD2J,gBAAkB,SAAC9K,GACf,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAc0G,WAAWvF,OAAQD,IACjD,GAAIlB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OAAQC,IAC9D,GAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OACjD,IAAK,IAAIM,EAAI,EAAGA,EAAIzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OAAQM,IAAK,CAC9E,GAAIzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAASM,OAC7D,IAAK,IAAIoK,EAAI,EAAGA,EAAIvL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAASM,OAAQoK,IACrFvL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAG/J,MAAMD,KAAOhE,EAAK0R,eAAejP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKmI,oBAAqB1J,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKqI,qBAChQ3J,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAG/J,MAAMF,KAAO/D,EAAK0R,eAAejP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKoI,oBAAqB1J,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKoI,qBAChQ3J,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKQ,UAAY9B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAG/J,MAAMF,KACvJtB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKS,cAAgB/B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAG/J,MAAMD,KAC3JvB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKgK,iBAAoBtL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKQ,SAAW9B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKS,aAC9O/B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKO,UAAY9B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAG/J,MAAMD,KACvJvB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKQ,cAAgB/B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAG/J,MAAMF,KAC3JtB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAK+J,iBAAoBtL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKO,SAAW9B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKQ,aAC1O/B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAG/J,MAAMF,OAAStB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAG/J,MAAMD,MACrJvB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKM,QACrE5B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKI,SACrE1B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKK,QACrE5B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKG,UAC9D1B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAG/J,MAAMF,KAAOtB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAG/J,MAAMD,MAC1JvB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKK,OACrE3B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKI,QAAU,EAC/E1B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKM,WAErE7B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKI,OACrE3B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGhK,KAAKG,QAAU,EAC/E1B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGZ,SAAS0K,GAAGjK,KAAKO,UAYjF,IARA,IAAIyN,EAAkB,EAClBC,EAAmB,IACnBC,OAAY,EACZC,EAAuB,EACvBC,EAAuB,EACvBC,OAAa,EACbC,EAAwB,EACxBC,EAAwB,EACnBtE,EAAI,EAAGA,EAAIvL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMjG,OAAQoK,IAC9EvL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,OAAS4N,GACtEE,EAAexP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GACzE+D,EAAkBtP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,OAC/E+N,EAAuBzP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGD,iBACpFoE,EAAuB1P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGzJ,UAC7E9B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,SAAW4N,GAC/EtP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGD,iBAAmBmE,GAChFD,EAAexP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GACzE+D,EAAkBtP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,OAC/E+N,EAAuBzP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGD,iBACpFoE,EAAuB1P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGzJ,UAC7E9B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,SAAW4N,GAC/EtP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGD,mBAAqBmE,GAClFzP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGzJ,SAAW4N,IACxEF,EAAexP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GACzE+D,EAAkBtP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,OAC/E+N,EAAuBzP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGD,iBACpFoE,EAAuB1P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGzJ,UAEpF9B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,OAAS6N,GACtEI,EAAgB3P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAC1EgE,EAAmBvP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,OAChFkO,EAAwB5P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGD,iBACrFuE,EAAwB7P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGzJ,UAC9E9B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,SAAW6N,GAC/EvP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGD,iBAAmBsE,GAChFD,EAAgB3P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAC1EgE,EAAmBvP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,OAChFkO,EAAwB5P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGD,iBACrFuE,EAAwB7P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGzJ,UAC9E9B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,SAAW6N,GAC/EvP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGD,mBAAqBsE,GAClF5P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGzJ,SAAW+N,IACxEF,EAAgB3P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAC1EgE,EAAmBvP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAG7J,OAChFkO,EAAwB5P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGD,iBACrFuE,EAAwB7P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGzJ,UAI7F9B,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG+N,aAAeA,EACnExP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAGkO,cAAgBA,EAOxFpS,EAAKC,SAASwC,MAGlB8P,wBAA0B,SAAC9P,GACvB,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAc0G,WAAWvF,OAAQD,IACjD,GAAIlB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OAAQC,IAC9D,GAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OAAQ,CACzD,IAAK,IAAIM,EAAI,EAAGA,EAAIzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OAAQM,IAAK,CAC9E,IAAIlB,EAASP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAE9D,GAAIlB,EAAOuG,OACP,IAAK,IAAIyE,EAAI,EAAGA,EAAIhL,EAAO6G,MAAMjG,OAAQoK,IACrC,GAAIhL,EAAO6G,MAAMmE,KAAOhL,EAAOiP,aAAc,CACzCjP,EAAO6G,MAAMoH,OAAOjD,EAAG,GACvB,IAAIiE,EAAejP,EAAOiP,aAC1BxP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,EAAI,GAAG2F,MAAM/F,KAAKmO,GAK/E,GAAIjP,EAAOwG,OACP,IAAK,IAAIwE,EAAI,EAAGA,EAAIhL,EAAO6G,MAAMjG,OAAQoK,IACrC,GAAIhL,EAAO6G,MAAMmE,KAAOhL,EAAOoP,cAAe,CAC1CpP,EAAO6G,MAAMoH,OAAOjD,EAAG,GACvB,IAAIoE,EAAgBpP,EAAOoP,cAC3B3P,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,EAAI,GAAG2F,MAAM/F,KAAKsO,IAOnF,IAAK,IAAIpE,EAAI,EAAGA,EAAIvL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OAAQoK,IAEzE,IADA,IAAIhL,EAASP,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQ2E,GACrDU,EAAI,EAAGA,EAAI1L,EAAO6G,MAAMjG,OAAQ8K,IAAK,CAC1C,IAAIrI,EAAOrD,EAAO6G,MAAM6E,GACpBrI,EAAKyD,eAAiB9G,EAAOyG,iBAC7BpD,EAAKyD,gBAAkB,EACnBzD,EAAKyD,eAAiB9G,EAAOyG,kBAC7BpD,EAAKyD,eAAiB9G,EAAOyG,kBAE1BpD,EAAKyD,eAAiB9G,EAAO0G,eACpCrD,EAAKyD,gBAAkB,EACnBzD,EAAKyD,eAAiB9G,EAAO0G,gBAC7BrD,EAAKyD,eAAiB9G,EAAO0G,gBAE1BrD,EAAKyD,gBAAkB9G,EAAO0G,eAAiBrD,EAAKyD,eAAiB9G,EAAOyG,kBACnFpD,EAAKyD,gBAAkB,QAUvD0D,WAAa,SAAC/K,GACV,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAc0G,WAAWvF,OAAQD,IACjD,GAAIlB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OAAQC,IAC9D,GAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OACjD,IAAK,IAAIM,EAAI,EAAGA,EAAIzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OAAQM,IACzE,GAAIzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMjG,OAC1D,IAAK,IAAIoK,EAAI,EAAGA,EAAIvL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMjG,OAAQoK,IAClF,GAAIvL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGhE,QAAQpG,OACrE,IAAK,IAAI8K,EAAI,EAAGA,EAAIjM,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GAAGhE,QAAQpG,OAAQ8K,IAAK,CAClG,IAAIrI,EAAO5D,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GACjEpG,EAASvB,EAAK2D,QAAQ0E,GACP,KAAf9G,EAAOsC,MAEP7D,EAAK2D,QAAQiH,OAAOvC,EAAG,GACvBA,GAAK,GAEL9G,EAAOsC,IAAM,KACbtC,EAAOuC,OAASnK,EAAKwS,8BAA8BnM,EAAKyD,gBACpDlC,EAAOuC,MAAQ,KACfvC,EAAOuC,MAAQ,KAGnBvC,EAAOsC,KAAO,KACdtC,EAAOuC,OAASnK,EAAKwS,8BAA8B,IAAMnM,EAAKyD,gBAC1DlC,EAAOuC,MAAQ,IACfvC,EAAOuC,MAAQ,IAGvBvC,EAAOsC,KAAO,EAUlDlK,EAAKyS,YAAYhQ,GACjBzC,EAAKuS,wBAAwB9P,GAC7BzC,EAAKC,SAASwC,MAGlBiQ,iBAAmB,WAWf,MAV0B,CACtBC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MAEkBlT,EAAKyE,aAAa,OAG/CgO,YAAc,SAAChQ,GACX,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAc0G,WAAWvF,OAAQD,IACjD,GAAIlB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUxF,OAAQC,IAC9D,GAAIpB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OACjD,IAAK,IAAIM,EAAI,EAAGA,EAAIzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQzF,OAAQM,IACzE,GAAIzB,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMjG,OAC1D,IAAK,IAAIoK,EAAI,EAAGA,EAAIvL,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMjG,OAAQoK,IAAK,CACvF,IAAM3H,EAAO5D,EAAc0G,WAAWxF,GAAGyF,UAAUvF,GAAGwF,QAAQnF,GAAG2F,MAAMmE,GACnEmF,EAAanT,EAAKwR,kBAAkBxR,EAAK0S,mBAAoBjQ,EAAcyK,YAAY6B,MAAO1I,EAAK0D,aACnGqJ,EAAapT,EAAKwR,kBAAkBxR,EAAK0S,mBAAoBjQ,EAAcyK,YAAY6B,MAAO1I,EAAK0D,aACvG1D,EAAK2D,QAAQlG,KAAKqP,GAClB9M,EAAK2D,QAAQlG,KAAKsP,OAUlDZ,8BAAgC,SAACa,GACzBA,EAAqB,KACrBA,EAAqB,IAEzB,IAAIC,EAAY3O,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMyO,EAAqB,IAK3E,OAJAC,GAAcD,EAAqB,IACnB1O,KAAKC,MAAMyO,EAAqB,KAC5CC,EAAY3O,KAAKC,MAAMyO,EAAqB,IAEzC1O,KAAKC,MAAM0O,MAGtBhJ,2BAA6B,SAACG,GAC1B,GAAKzK,EAAKV,MAAM8N,mBAAhB,CAIA,IAAM3K,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAO1C,EAAKV,OACzBsI,EAASnF,EAAc+H,WAAWyG,OAAOxG,EAAO,GACtDhI,EAAc2K,mBAAmBpD,QAAQlG,KAAK8D,EAAO,IACrD5H,EAAKC,SAASwC,QANV6I,QAAQC,IAAI,0BASpBgI,0BAA4B,WACxB,IAAM9Q,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAc0K,gBAAkBnN,EAAKV,MAAM6N,eAC3CnN,EAAKC,SAASwC,MAGlB+Q,qBAAuB,SAAC3T,GACpB,IAAM4C,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAcoK,iBAAmB7M,EAAKV,MAAM6J,WAAWtJ,EAAEC,OAAOC,OAChE0C,EAAcqK,eAAiB,GAC/BrK,EAAcsK,cAAgB,GAC9BtK,EAAcuK,YAAc,GAC5BvK,EAAcwK,cAAgB,GAC9BxK,EAAc2G,UAAYpJ,EAAKV,MAAM6J,WAAWtJ,EAAEC,OAAOC,OAAOqJ,UAChE3G,EAAc4G,QAAU,GACxB5G,EAAcoH,MAAQ,GACtBpH,EAAcuH,QAAU,GACxBhK,EAAKC,SAASwC,MAGlBkI,mBAAqB,SAACF,GAClB,IAAMhI,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAcqK,eAAiB9M,EAAKV,MAAMuN,iBAAiBzD,UAAUqB,GACrEhI,EAAcsK,cAAgB,GAC9BtK,EAAcuK,YAAc,GAC5BvK,EAAcwK,cAAgB,GAC9BxK,EAAc4G,QAAU5G,EAAcqK,eAAezD,QACrD5G,EAAcoH,MAAQ,GACtBpH,EAAcuH,QAAU,GACxBhK,EAAKC,SAASwC,MAGlBsI,kBAAoB,SAACN,GACjB,IAAMhI,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAcsK,cAAgB/M,EAAKV,MAAMwN,eAAezD,QAAQoB,GAChEhI,EAAcuK,YAAc,GAC5BvK,EAAcwK,cAAgB,GAC9BxK,EAAcoH,MAAQpH,EAAcsK,cAAclD,MAClDpH,EAAcuH,QAAU,GACxBhK,EAAKC,SAASwC,MAGlByI,gBAAkB,SAACT,GACf,IAAMhI,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAcuK,YAAchN,EAAKV,MAAMyN,cAAclD,MAAMY,GAC3DhI,EAAcwK,cAAgB,GAC9BxK,EAAcuH,QAAUvH,EAAcuK,YAAYhD,QAClDhK,EAAKC,SAASwC,MAGlB+I,mBAAqB,SAACnF,GAClB,IAAM5D,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAO1C,EAAKV,OAC/BmD,EAAc2K,mBAAqB/G,EACnCrG,EAAKC,SAASwC,MAGlBgJ,kBAAoB,SAAChB,GACjB,IAAMhI,EAAaC,OAAAC,EAAA,EAAAD,CAAA,GAAQ1C,EAAKV,OAChCmD,EAAcwK,cAAgBjN,EAAKV,MAAM0N,YAAYhD,QAAQS,GAC7DzK,EAAKC,SAASwC,4EAGT,IAAA8H,EAAAnJ,KACDuL,EAAcvL,KAAK9B,MAAMqN,YAC7B,OACI5N,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,YACXjG,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,UACXjG,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,WACXjG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAM+F,UAAU,UAAUnC,QAASzB,KAAKiM,qBAAxC,OAAJ,MAA+EjM,KAAK9B,MAAMkN,OAAOC,KAAjG,IAAwGrL,KAAK9B,MAAMoN,aAAaC,KAEpI5N,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,YACV5D,KAAK9B,MAAM8N,mBACRrO,EAAAC,EAAAC,cAAA,0BAAkBmC,KAAK9B,MAAM8N,mBAAmB1M,MAC9C3B,EAAAC,EAAAC,cAAA,0CAIdF,EAAAC,EAAAC,cAAA,UAAQ4D,QAASzB,KAAKmS,2BAAtB,eACCnS,KAAK9B,MAAM6N,eACRpO,EAAAC,EAAAC,cAACwU,EAAD,CACIjJ,WAAYpJ,KAAK9B,MAAMkL,WACvBF,2BAA4BlJ,KAAKkJ,6BAEnC,KAENvL,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,cACV5D,KAAK9B,MAAM6J,WAAWpG,IAAI,SAAC6H,EAAWH,GACnC,OACI1L,EAAAC,EAAAC,cAAA,UACImE,IAAG,aAAAF,OAAeuH,EAAQ,GAC1B5H,QAAS0H,EAAKiJ,qBACdzT,MAAO0K,GAENG,EAAUlK,SAK3B3B,EAAAC,EAAAC,cAAA,WACCmC,KAAK9B,MAAM8J,UAAUxF,OAClB7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyU,EAAD,CACI9I,UAAWxJ,KAAK9B,MAAMuN,iBACtBlC,mBAAoBvJ,KAAKuJ,qBAE7B5L,EAAAC,EAAAC,cAAA,YAEF,KAELmC,KAAK9B,MAAM+J,QAAQzF,OAChB7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0U,EAAD,CACI9I,QAASzJ,KAAK9B,MAAMwN,eACpB/B,kBAAmB3J,KAAK2J,oBAE5BhM,EAAAC,EAAAC,cAAA,YAEF,KAELmC,KAAK9B,MAAMuK,MAAMjG,OACd7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2U,EAAD,CACI5Q,OAAQ5B,KAAK9B,MAAMyN,cACnB7B,gBAAiB9J,KAAK8J,kBAE1BnM,EAAAC,EAAAC,cAAA,YAEF,KAELmC,KAAK9B,MAAM0K,QAAQpG,OAChB7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4U,EAAD,CACIxN,KAAMjF,KAAK9B,MAAM0N,YACjBxB,mBAAoBpK,KAAKoK,mBACzBC,kBAAmBrK,KAAKqK,oBAE5B1M,EAAAC,EAAAC,cAAA,YAEF,KAELmC,KAAK9B,MAAM2N,cACRlO,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC6U,EAAD,CACIlM,OAAQxG,KAAK9B,MAAM2N,gBAEvBlO,EAAAC,EAAAC,cAAA,YAEF,aA17BuBG,aCkB9B2U,MAnBf,WACE,OACEhV,EAAAC,EAAAC,cAAA,OAAK+F,UAAU,OACbjG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,KACEjV,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWrV,IACjCC,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW3S,IACvCzC,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAW7O,IACjDvG,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWnN,IACrCjI,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAW/M,IAC7CrI,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWxL,IACvC5J,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWpL,IACjDhK,EAAAC,EAAAC,cAAC+U,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,OAAOC,UAAW5H,QClB9C6H,IAASC,OAAOtV,EAAAC,EAAAC,cAACqV,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.9de0a8c7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Dashboard extends Component {\n\n    render() {\n        return (\n            <div>\n                <h1>League Simulator</h1>\n                <Link to='/league'><h2>All Leagues</h2></Link>\n                <Link to='/club'><h2>All Clubs</h2></Link>\n                <Link to='/player'><h2>All Players</h2></Link>\n                <hr />\n                <Link to='/sim'><h2>Simulation Arena</h2></Link>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class CreateLeague extends Component {\n    state = {\n        newName: '',\n        newPyramidPosition: '',\n        newProPossible: false,\n        newRelPossible: false,\n        newNumberOfClubs: ''\n    }\n\n    onNewNameChange = (e) => {\n        const newName = e.target.value\n        this.setState({ newName })\n    }\n\n    onNewPyramidPosition = (e) => {\n        const newPyramidPosition = e.target.value\n        this.setState({ newPyramidPosition })\n    }\n\n    onNewProPossible = (e) => {\n        const newProPossible = e.target.checked\n        this.setState({ newProPossible })\n    }\n\n    onNewRelPossible = (e) => {\n        const newRelPossible = e.target.checked\n        this.setState({ newRelPossible })\n    }\n\n    onNewNumberOfClubs = (e) => {\n        const newNumberOfClubs = e.target.value\n        this.setState({ newNumberOfClubs })\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault()\n        const newLeague = {\n            name: this.state.newName,\n            pyramidPosition: Number(this.state.newPyramidPosition),\n            proPossible: this.state.newProPossible,\n            relPossible: this.state.newRelPossible,\n            numberOfClubs: Number(this.state.newNumberOfClubs)\n        }\n        this.props.onCreateSubmit(newLeague)\n        this.clearFormFields()\n    }\n\n    clearFormFields = () => {\n        this.setState({\n            newName: '',\n            newPyramidPosition: '',\n            newProPossible: false,\n            newRelPossible: false,\n            newNumberOfClubs: ''\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <form\n                    onSubmit={this.onFormSubmit}\n                >\n                    <input\n                        type='text'\n                        placeholder='League Name'\n                        onChange={this.onNewNameChange}\n                        value={this.state.newName}\n                    />\n                    <input\n                        type='number'\n                        placeholder='Position on Pyramid'\n                        onChange={this.onNewPyramidPosition}\n                        value={this.state.newPyramidPosition}\n                    />\n                    <input\n                        type='checkbox'\n                        onChange={this.onNewProPossible}\n                        value={!this.state.newProPossible}\n                    /><span> Promotion</span>\n                    <input\n                        type='checkbox'\n                        onChange={this.onNewRelPossible}\n                        value={this.state.newRelPossible}\n                    /><span> Relegation</span>\n                    <input\n                        type='number'\n                        placeholder='Number of Clubs'\n                        onChange={this.onNewNumberOfClubs}\n                        value={this.state.newNumberOfClubs}\n                    />\n                    <input\n                        type='submit'\n                    />\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport CreateLeague from './CreateLeague.js'\n\nexport default class AllLeagues extends Component {\n    state = {\n        listOfLeagues: [],\n        createFormShow: false\n    }\n\n\n    componentDidMount() {\n        this.getLeagues()\n    }\n\n    getLeagues = async () => {\n        let res = await axios.get('/api/league/')\n        this.setState({ listOfLeagues: res.data })\n    }\n\n    onCreateClick = () => {\n        const previousState = { ...this.state }\n        previousState.createFormShow = !this.state.createFormShow\n        this.setState(previousState)\n    }\n\n    onCreateSubmit = (newLeague) => {\n        axios.post('/api/league/', newLeague)\n        this.getLeagues()\n    }\n\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.onCreateClick}>Create League</button>\n                {this.state.createFormShow ?\n                    <CreateLeague\n                        onCreateSubmit={this.onCreateSubmit}\n                    />\n                    : null\n                }\n                {this.state.listOfLeagues.map((league) => {\n                    let leagueLink = `/league/${league._id}`\n                    return (\n                        <Link to={leagueLink} key={league._id}><h2>{league.name}</h2></Link>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport DataTable from 'react-data-table-component'\n\n\n\nexport default class Schedule extends Component {\n    state = {\n        schedule: [],\n        leagueTable: [],\n        \n    }\n\n    createSchedule = () => {\n        let allClubs = this.props.allClubs\n        let schedule = []\n        let week = 1\n        let leagueTable = allClubs\n        for (let i = 0; i < allClubs.length; i++) {\n            for (let j = 0; j < allClubs.length; j++) {\n                if (allClubs[i]._id !== allClubs[j]._id) {\n                    schedule.push({ home: allClubs[i], away: allClubs[j], week: week, score: {home: '', away: ''} })\n                    week++\n                } \n            }\n        }\n        for (let k = 0; k < leagueTable.length; k++) {\n            leagueTable[k].points = 0\n            leagueTable[k].wins = 0\n            leagueTable[k].draws = 0\n            leagueTable[k].losses = 0\n            leagueTable[k].goalsFor = 0\n            leagueTable[k].goalsAgainst = 0\n        }\n        this.setState({ schedule, leagueTable })\n    }\n\n    getRandomInt = (max) => {\n        return Math.floor(Math.random() * Math.floor(max))\n    }\n\n    handleNewSeason = () => {\n        const previousState = {...this.state}\n        for (let i = 0; i < previousState.schedule.length; i++) {\n            previousState.schedule[i].score.away = this.getRandomInt(5)\n            previousState.schedule[i].score.home = this.getRandomInt(6)\n            previousState.schedule[i].home.goalsFor += previousState.schedule[i].score.home\n            previousState.schedule[i].home.goalsAgainst += previousState.schedule[i].score.away\n            previousState.schedule[i].away.goalsFor += previousState.schedule[i].score.away\n            previousState.schedule[i].away.goalsAgainst += previousState.schedule[i].score.home\n            if (previousState.schedule[i].score.home === previousState.schedule[i].score.away) {\n                previousState.schedule[i].home.draws ++\n                previousState.schedule[i].home.points ++\n                previousState.schedule[i].away.draws ++\n                previousState.schedule[i].away.points ++\n            } else if (previousState.schedule[i].score.home > previousState.schedule[i].score.away) {\n                previousState.schedule[i].home.wins ++\n                previousState.schedule[i].home.points += 3\n                previousState.schedule[i].away.losses ++\n            } else {\n                previousState.schedule[i].away.wins ++\n                previousState.schedule[i].away.points += 3\n                previousState.schedule[i].home.losses ++\n            }\n        }\n        this.setState(previousState)\n    }\n\n    render() {\n        let schedule = this.state.schedule\n        const data = this.state.leagueTable\n        const columns = [\n            {\n                name: 'Club',\n                selector: 'name',\n                sortable: true,\n            },\n            {\n                name: 'Points',\n                selector: 'points',\n                sortable: true\n            },\n            {\n                name: 'Wins',\n                selector: 'wins',\n                sortable: true\n            },\n            {\n                name: 'Draws',\n                selector: 'draws',\n                sortable: true\n            },\n            {\n                name: 'Losses',\n                selector: 'losses',\n                sortable: true\n            },\n            {\n                name: 'GF',\n                selector: 'goalsFor',\n                sortable: true\n            },\n            {\n                name: 'GA',\n                selector: 'goalsAgainst',\n                sortable: true\n            },\n        ]\n        return (\n            <div>\n                <h2>Schedule</h2>\n                {!schedule.length ?\n                    <button\n                        onClick={this.createSchedule}\n                    >\n                        Create Schedule\n                </button>\n                    : <button\n                        onClick={this.handleNewSeason}\n                    >Simulate Season</button>\n                }\n\n                {/* {schedule.length ?\n                    <div className='schedule'>\n                        {schedule.map((week) => {\n                            return(\n                                <p>{week}</p>\n                            )\n                        })}\n                    </div>\n                : null\n                } */}\n                <br />\n                <br />\n                {schedule.length ?\n                    <DataTable\n                        className='table'\n                        title=\"League Table\"\n                        columns={columns}\n                        data={data}\n                        theme='dark'\n                        \n                    />\n                    : null\n                }\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport Schedule from './Schedule/Schedule.js'\n\nexport default class SingleLeague extends Component {\n    state = {\n        league: '',\n        currentClubs: [],\n        allClubs: [],\n        filteredClubs: [],\n        selectedClub: '',\n        filterButtonClicked: true,\n        timesClubsPlayEachOther: 2,\n    }\n\n\n    componentDidMount() {\n        this.getLeague()\n    }\n\n    getLeague = async () => {\n        let leagueId = this.props.match.params.leagueId\n        let res = await axios.get(`/api/league/${leagueId}`)\n        let secondRes = await axios.get('/api/club/')\n        this.setState({ league: res.data.singleLeague, currentClubs: res.data.allClubs, allClubs: secondRes.data, filteredClubs: secondRes.data })\n    }\n\n    onSelectChange = (e) => {\n        let clubId = e.target.value\n        let selectedClub = this.state.allClubs.filter((club) => {\n            return club._id === clubId\n        })[0]\n        this.setState({selectedClub})\n    }\n\n    onSelectSubmit = (e) => {\n        e.preventDefault()\n        let club = this.state.selectedClub\n        club.leagueId = this.state.league._id\n        axios.put(`/api/club/${club._id}`, club)\n        this.getLeague()\n    }\n\n    onFilterClubClick = () => {\n        const previousState = { ...this.state }\n        previousState.filterButtonClicked = !this.state.filterButtonClicked\n        this.setState(previousState)\n        if (this.state.filterButtonClicked) {\n            this.filterClubs()\n        } else {\n            this.showAllClubs()\n        }\n    }\n\n    filterClubs = () => {\n        let filteredClubs = this.state.allClubs.filter((club) => {\n            return club.leagueId !== this.state.league._id\n        })\n        this.setState({ filteredClubs })\n    }\n\n    showAllClubs = () => {\n        let filteredClubs = this.state.allClubs\n        this.setState({ filteredClubs })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>{this.state.league.name}</h1>\n                <form\n                    onSubmit={this.onSelectSubmit}\n                >\n                    <select\n                        onChange={this.onSelectChange}\n                    >\n                        <option\n                            value={null}\n                        >{this.state.filteredClubs.length ? '---Select A Club---' : '---No Clubs Available---'}</option>\n                        {this.state.filteredClubs.map((club) => {\n                            return (\n                                <option value={club._id} key={'dropdown-key-' + club._id}>{club.name}</option>\n                            )\n                        })}\n                    </select>\n                    <input\n                        type='submit'\n                        disabled={!this.state.selectedClub}\n                    />\n                </form>\n                <button\n                    onClick={this.onFilterClubClick}\n                >\n                    {this.state.filterButtonClicked ? `Hide ${this.state.league.name} Clubs` : 'Show All Clubs'}\n                </button>\n                <h2>Clubs</h2>\n                <ol>\n                    {this.state.currentClubs.map((club) => {\n                        let clubLink = `/club/${club._id}`\n                        return (\n                            <Link to={clubLink} key={club._id}><li>{club.name}</li></Link>\n                        )\n                    })}\n                </ol>\n                <Schedule allClubs={this.state.currentClubs}/>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class CreateClub extends Component {\n    state = {\n        newName: ''\n    }\n\n    onNewNameChange = (e) => {\n        const newName = e.target.value\n        this.setState({ newName })\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault()\n        const newClub = {\n            name: this.state.newName\n        }\n        this.props.onCreateSubmit(newClub)\n        this.clearFormFields()\n    }\n\n    clearFormFields = () => {\n        this.setState({\n            newName: ''\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <form\n                    onSubmit={this.onFormSubmit}\n                >\n                    <input\n                        type='text'\n                        placeholder='Club Name'\n                        onChange={this.onNewNameChange}\n                        value={this.state.newName}\n                    />\n                    <input\n                        type='submit'\n                    />\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport CreateClub from './CreateClub.js'\n\nexport default class AllClubs extends Component {\n    state = {\n        listOfClubs: [],\n        createFormShow: false\n    }\n\n\n    componentDidMount() {\n        this.getClubs()\n    }\n\n    getClubs = async () => {\n        let res = await axios.get('/api/club/')\n        this.setState({ listOfClubs: res.data })\n    }\n\n    onCreateClick = () => {\n        const previousState = { ...this.state }\n        previousState.createFormShow = !this.state.createFormShow\n        this.setState(previousState)\n    }\n\n    onCreateSubmit = (newClub) => {\n        axios.post('/api/club/', newClub)\n        this.getClubs()\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.onCreateClick}>Create Club</button>\n                {this.state.createFormShow ?\n                    <CreateClub\n                        onCreateSubmit={this.onCreateSubmit}\n                    />\n                    : null\n                }\n                {this.state.listOfClubs.map((club) => {\n                    let clubLink = `/club/${club._id}`\n                    return (\n                        <Link to={clubLink} key={club._id}><h2>{club.name}</h2></Link>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\n\nexport default class SingleClub extends Component {\n    state = {\n        club: '',\n        currentPlayers: [],\n        allPlayers: [],\n        filteredPlayers: [],\n        selectedPlayer: '',\n        filterButtonClicked: true\n    }\n\n\n    componentDidMount() {\n        this.getClub()\n    }\n\n    getClub = async () => {\n        let clubId = this.props.match.params.clubId\n        let res = await axios.get(`/api/club/${clubId}`)\n        let secondRes = await axios.get('/api/player/')\n        this.setState({ club: res.data.singleClub, currentPlayers: res.data.allPlayers, allPlayers: secondRes.data, filteredPlayers: secondRes.data })\n    }\n\n    onSelectChange = (e) => {\n        let playerId = e.target.value\n        let selectedPlayer = this.state.allPlayers.filter((player) => {\n            return player._id === playerId\n        })[0]\n        this.setState({selectedPlayer})\n    }\n\n    onSelectSubmit = (e) => {\n        e.preventDefault()\n        let player = this.state.selectedPlayer\n        player.clubId = this.state.club._id\n        axios.put(`/api/player/${player._id}`, player)\n        this.getClub()\n    }\n\n    onFilterPlayerClick = () => {\n        const previousState = { ...this.state }\n        previousState.filterButtonClicked = !this.state.filterButtonClicked\n        this.setState(previousState)\n        if (this.state.filterButtonClicked) {\n            this.filterPlayers()\n        } else {\n            this.showAllPlayers()\n        }\n    }\n\n    filterPlayers = () => {\n        let filteredPlayers = this.state.allPlayers.filter((player) => {\n            return player.clubId !== this.state.club._id\n        })\n        this.setState({ filteredPlayers })\n    }\n\n    showAllPlayers = () => {\n        let filteredPlayers = this.state.allPlayers\n        this.setState({ filteredPlayers })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h1>{this.state.club.name}</h1>\n                <form\n                    onSubmit={this.onSelectSubmit}\n                >\n                    <select\n                        onChange={this.onSelectChange}\n                    >\n                        <option\n                            value={null}\n                        >{this.state.filteredPlayers.length ? '---Select A Player---' : '---No Players Available---'}</option>\n                        {this.state.filteredPlayers.map((player) => {\n                            return (\n                                <option value={player._id} key={'dropdown-key-' + player._id}>{player.firstName} {player.lastName}</option>\n                            )\n                        })}\n                    </select>\n                    <input\n                        type='submit'\n                        disabled={!this.state.selectedPlayer}\n                    />\n                </form>\n                <button\n                        onClick={this.onFilterPlayerClick}\n                >\n                    {this.state.filterButtonClicked ? `Hide ${this.state.club.name} Players` : 'Show All Players'}\n                </button>\n                <h2>Players</h2>\n                <ul>\n                    {this.state.currentPlayers.map((player) => {\n                        let playerLink = `/player/${player._id}`\n                        return (\n                            <Link to={playerLink} key={player._id}><li>{player.firstName} {player.lastName}</li></Link>\n                        )\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class CreateLeague extends Component {\n    state = {\n        newFirstName: '',\n        newLastName: '',\n        newPosition: ''\n    }\n\n    onNewFirstNameChange = (e) => {\n        const newFirstName = e.target.value\n        this.setState({ newFirstName })\n    }\n\n    onNewLastNameChange = (e) => {\n        const newLastName = e.target.value\n        this.setState({ newLastName })\n    }\n\n    onNewPosition = (e) => {\n        const newPosition = e.target.value\n        this.setState({ newPosition })\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault()\n        const newPlayer = {\n            firstName: this.state.newFirstName,\n            lastName: this.state.newLastName,\n            position: this.state.newPosition\n        }\n        this.props.onCreateSubmit(newPlayer)\n        this.clearFormFields()\n    }\n\n    clearFormFields = () => {\n        this.setState({\n            newFirstName: '',\n            newLastName: '',\n            newPosition: ''\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <form\n                    onSubmit={this.onFormSubmit}\n                >\n                    <input\n                        type='text'\n                        placeholder='First Name'\n                        onChange={this.onNewFirstNameChange}\n                        value={this.state.newFirstName}\n                    />\n                    <input\n                        type='text'\n                        placeholder='Last Name'\n                        onChange={this.onNewLastNameChange}\n                        value={this.state.newLastName}\n                    />\n                    <input\n                        type='text'\n                        placeholder='Position'\n                        onChange={this.onNewPosition}\n                        value={this.state.newPosition}\n                    />\n                    <input\n                        type='submit'\n                    />\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport CreatePlayer from './CreatePlayer.js'\n\nexport default class AllPlayers extends Component {\n    state = {\n        listOfPlayers: [],\n        createFormShow: false\n    }\n\n    componentDidMount() {\n        this.getEveryPlayer()\n    }\n\n    getEveryPlayer = async () => {\n        let res = await axios.get('/api/player/')\n        this.setState({ listOfPlayers: res.data })\n    }\n\n    onCreateClick = () => {\n        const previousState = { ...this.state }\n        previousState.createFormShow = !this.state.createFormShow\n        this.setState(previousState)\n    }\n\n    onCreateSubmit = (newPlayer) => {\n        axios.post('/api/player/', newPlayer)\n        this.getEveryPlayer()\n    }\n\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.onCreateClick}>Create Player</button>\n                {this.state.createFormShow ?\n                    <CreatePlayer\n                        onCreateSubmit={this.onCreateSubmit}\n                    />\n                    : null\n                }\n                {this.state.listOfPlayers.map((player) => {\n                    let playerLink = `/player/${player._id}`\n                    return (\n                        <Link to={playerLink} key={player._id}><h2>{player.firstName} {player.lastName}</h2></Link>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport default class SinglePlayer extends Component {\n    state = {\n        player: ''\n    }\n\n    componentDidMount() {\n        this.getPlayer()\n    }\n\n    getPlayer = async () => {\n        let playerId = this.props.match.params.playerId\n        let res = await axios.get(`/api/player/${playerId}`)\n        this.setState({ player: res.data.singlePlayer })\n    }\n    render() {\n        return (\n            <div>\n                <h1>{this.state.player.firstName} {this.state.player.lastName}</h1>\n            </div>\n        )\n    }\n}\n","export default {\n    continents: [\n        {\n            name: 'Africa',\n            countries: []\n        },\n        {\n            name: 'Asia',\n            countries: []\n        },\n        {\n            name: 'Europe',\n            countries: [\n                {\n                    name: 'England',\n                    leagues: [\n                        {\n                            name: 'Premier League',\n                            pyramidPos: 1,\n                            proPos: false,\n                            relPos: true,\n                            trainingCeiling: 99,\n                            trainingFloor: 75,\n                            youthCeiling: 99,\n                            youthFloor: 75,\n                            clubs: [\n                                {\n                                    name: 'Tottenham Hotspur',\n                                    trainingRating: 75,\n                                    youthRating: 75,\n                                    players: [\n                                        {\n                                            name: 'Harry Kane',\n                                            position: 'Striker',\n                                            posAbr: 'ST',\n                                            age: 26,\n                                            skill: 89\n                                        },\n                                        {\n                                            name: 'Dele Alli',\n                                            position: 'Left Midfielder',\n                                            posAbr: 'LM',\n                                            age: 23,\n                                            skill: 84\n                                        },\n                                        {\n                                            name: 'Harry Winks',\n                                            position: 'Central Midfielder',\n                                            posAbr: 'CM',\n                                            age: 23,\n                                            skill: 80\n                                        },\n                                        {\n                                            name: 'Hugo Lloris',\n                                            position: 'Goalkeeper',\n                                            posAbr: 'GK',\n                                            age: 32,\n                                            skill: 88\n                                        },\n                                        {\n                                            name: 'Paulo Gazzaniga',\n                                            position: 'Goalkeeper',\n                                            posAbr: 'GK',\n                                            age: 27,\n                                            skill: 77\n                                        },\n                                        {\n                                            name: 'Michel Vorm',\n                                            position: 'Goalkeeper',\n                                            posAbr: 'GK',\n                                            age: 35,\n                                            skill: 74\n                                        },\n                                    ],\n                                },\n                                {\n                                    name: 'Arsenal',\n                                    trainingRating: 75,\n                                    youthRating: 75,\n                                    players: [\n                                        {\n                                            name: 'Pierre-Emerick Aubameyang',\n                                            position: 'Striker',\n                                            posAbr: 'ST',\n                                            age: 30,\n                                            skill: 88\n                                        }\n                                    ],\n                                },\n                                {\n                                    name: 'Chelsea',\n                                    trainingRating: 75,\n                                    youthRating: 75,\n                                    players: [\n                                        {\n                                            name: `N'Golo Kante`,\n                                            position: 'Central Midfielder',\n                                            posAbr: 'CM',\n                                            age: 28,\n                                            skill: 89\n                                        }\n                                    ],\n                                },\n                            ]\n                        },\n                        {\n                            name: 'EFL Championship',\n                            pyramidPos: 2,\n                            proPos: true,\n                            relPos: true,\n                            trainingCeiling: 74,\n                            trainingFloor: 50,\n                            youthCeiling: 74,\n                            youthFloor: 50,\n                            clubs: [\n                                {\n                                    name: 'Leeds United',\n                                    trainingRating: 50,\n                                    youthRating: 50,\n                                    players: [],\n                                },\n                                {\n                                    name: 'Reading',\n                                    trainingRating: 50,\n                                    youthRating: 50,\n                                    players: [],\n                                },\n                                {\n                                    name: 'Stoke City',\n                                    trainingRating: 50,\n                                    youthRating: 50,\n                                    players: [],\n                                },\n                            ]\n                        },\n                        {\n                            name: 'EFL League 1',\n                            pyramidPos: 3,\n                            proPos: true,\n                            relPos: true,\n                            trainingCeiling: 49,\n                            trainingFloor: 25,\n                            youthCeiling: 49,\n                            youthFloor: 25,\n                            clubs: [\n                                {\n                                    name: 'AFC Wimbledon',\n                                    trainingRating: 25,\n                                    youthRating: 25,\n                                    players: [],\n                                },\n                                {\n                                    name: 'Lincoln City',\n                                    trainingRating: 25,\n                                    youthRating: 25,\n                                    players: [],\n                                },\n                                {\n                                    name: 'Sunderland',\n                                    trainingRating: 25,\n                                    youthRating: 25,\n                                    players: [],\n                                },\n                            ]\n                        },\n                        {\n                            name: 'EFL League 2',\n                            pyramidPos: 4,\n                            proPos: true,\n                            relPos: false,\n                            trainingCeiling: 24,\n                            trainingFloor: 1,\n                            youthCeiling: 24,\n                            youthFloor: 1,\n                            clubs: [\n                                {\n                                    name: 'Bradford City',\n                                    trainingRating: 1,\n                                    youthRating: 1,\n                                    players: [],\n                                },\n                                {\n                                    name: 'Dagenham & Redbridge',\n                                    trainingRating: 99,\n                                    youthRating: 99,\n                                    players: [],\n                                },\n                                {\n                                    name: 'Leyton Orient',\n                                    trainingRating: 1,\n                                    youthRating: 1,\n                                    players: [],\n                                },\n                            ]\n                        },\n                    ]\n                }\n            ]\n        },\n        {\n            name: 'North America',\n            countries: []\n        },\n        \n        {\n            name: 'Oceania',\n            countries: []\n        },\n        {\n            name: 'South America',\n            countries: []\n        },\n    ]\n}\n\n","import React, { Component } from 'react'\n\nexport default class FreeAgentsView extends Component {\n\n    handleFreeAgentClick = (e) => {\n        this.props.moveFreeAgentToCurrentClub(e.target.value)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <h1>Free Agents List</h1>\n                {this.props.freeAgents.length ?\n                    <div className='freeAgentWindow'>\n                        {this.props.freeAgents.map((player, index) => {\n                            return (\n                                <button\n                                    key={`fa-${player.name}-${index}`}\n                                    onClick={this.handleFreeAgentClick}\n                                    value={index}\n                                >\n                                    {player.name} | {player.posAbr} | {player.skill}\n                                </button>\n                            )\n                        })}\n                    </div>\n                    : <div>There are NO free agents to show</div>\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class ContinentView extends Component {\n\n    handleCountryClick = (e) => {\n        this.props.handleCountryClick(e.target.value)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Countries in {this.props.continent.name}</h1>\n                <div className='buttonList'>\n                   {this.props.continent.countries.map((country, index) => {\n                        return(\n                            <button \n                                key={`country-${index + 1}`}\n                                onClick={this.handleCountryClick}\n                                value={index}\n                            >\n                                {country.name}\n                            </button>    \n                        )\n                   })}\n               </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class CountryView extends Component {\n\n    handleLeagueClick = (e) => {\n        this.props.handleLeagueClick(e.target.value)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Leagues in {this.props.country.name}</h1>\n                <div className='buttonList'>\n                   {this.props.country.leagues.map((league, index) => {\n                        return(\n                            <button \n                                key={`league-${index + 1}`}\n                                onClick={this.handleLeagueClick}\n                                value={index}\n                            >\n                                {league.name}\n                            </button>    \n                        )\n                   })}\n               </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport DataTable from 'react-data-table-component'\n\nexport default class LeagueTable extends Component {\n    \n    render() {\n        const data = this.props.league.clubs\n        const columns = [\n            {\n                name: 'Club',\n                selector: 'name',\n                sortable: true,\n            },\n            {\n                name: 'Points',\n                selector: 'points',\n                sortable: true\n            },\n            {\n                name: 'Wins',\n                selector: 'wins',\n                sortable: true\n            },\n            {\n                name: 'Draws',\n                selector: 'draws',\n                sortable: true\n            },\n            {\n                name: 'Losses',\n                selector: 'losses',\n                sortable: true\n            },\n            {\n                name: 'GD',\n                selector: 'goalDifferential',\n                sortable: true\n            },\n            {\n                name: 'GF',\n                selector: 'goalsFor',\n                sortable: true\n            },\n            {\n                name: 'GA',\n                selector: 'goalsAgainst',\n                sortable: true\n            },\n        ]\n        return (\n            <div>\n                <h2>Schedule</h2>\n                <DataTable\n                    className='table'\n                    title=\"League Table\"\n                    columns={columns}\n                    data={data}\n                    theme='dark'\n                />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport LeagueTable from './LeagueTable.js'\n\nexport default class LeagueView extends Component {\n\n    handleClubClick = (e) => {\n        this.props.handleClubClick(e.target.value)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Clubs in {this.props.league.name}</h1>\n                <LeagueTable  league={this.props.league}/>\n                <div className='buttonList'>\n                   {this.props.league.clubs.map((club, index) => {\n                        return(\n                            <button \n                                key={`club-${index + 1}`}\n                                onClick={this.handleClubClick}\n                                value={index}\n                            >\n                                {club.name}\n                            </button>    \n                        )\n                   })}\n               </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class ClubView extends Component {\n\n    handleTakeControlClick = () => {\n        console.log(`You are controlling ${this.props.club.name}`)\n        this.props.handleControlClick(this.props.club)\n    }\n\n    handlePlayerClick = (e) => {\n        const playerName = e.target.value\n        const indexFinder = () => {\n            for (let i = 0; i < this.props.club.players.length; i++) {\n                if (this.props.club.players[i].name === playerName) {\n                    return i\n                }\n            }\n        }\n        const newIndex = indexFinder()\n        this.props.handlePlayerClick(newIndex)\n    }\n\n    render() {\n        const attack = this.props.club.lineup.filter(player => {\n            return player.posAbr === 'ST'\n        })\n        const midfield = this.props.club.lineup.filter(player => {\n            return player.posAbr === 'LM' || player.posAbr === 'CM' || player.posAbr === 'RM'\n        })\n        const defense = this.props.club.lineup.filter(player => {\n            return player.posAbr === 'LB' || player.posAbr === 'CB' || player.posAbr === 'RB'\n        })\n        const goalkeeper = this.props.club.lineup.filter(player => {\n            return player.posAbr === 'GK'\n        })\n        return (\n            <div>\n                <h1>{this.props.club.name}</h1>\n                <button onClick={this.handleTakeControlClick}>Take Control</button>\n                <h3>{this.props.club.name} Training Rating: {this.props.club.trainingRating}</h3>\n                <h3>Overall Squad Skill: {this.props.club.squadOverallSkill}</h3>\n                <p>Squad Attack: {this.props.club.squadAttackingSkill}</p>\n                <p>Squad Defense: {this.props.club.squadDefendingSkill}</p>\n                <h2>Lineup</h2>\n                <div className='lineup'>\n                    <div className='attack'>\n                        {attack.map((player, index) => {\n                            return (\n                                <button\n                                    key={`player-${index + 1}`}\n                                    onClick={this.handlePlayerClick}\n                                    value={player.name}\n                                >\n                                    {player.name}\n                                </button>\n                            )\n                        })}\n                    </div>\n                    <div className='midfield'>\n                        {midfield.map((player, index) => {\n                            return (\n                                <button\n                                    key={`player-${index + 1}`}\n                                    onClick={this.handlePlayerClick}\n                                    value={player.name}\n                                >\n                                    {player.name}\n                                </button>\n                            )\n                        })}\n                    </div>\n                    <div className='defense'>\n                        {defense.map((player, index) => {\n                            return (\n                                <button\n                                    key={`player-${index + 1}`}\n                                    onClick={this.handlePlayerClick}\n                                    value={player.name}\n                                >\n                                    {player.name}\n                                </button>\n                            )\n                        })}\n                    </div>\n                    <div className='goalkeeper'>\n                        {goalkeeper.map((player, index) => {\n                            return (\n                                <button\n                                    key={`player-${index + 1}`}\n                                    onClick={this.handlePlayerClick}\n                                    value={player.name}\n                                >\n                                    {player.name}\n                                </button>\n                            )\n                        })}\n                    </div>\n                </div>\n                <h2>Bench</h2>\n                <div className='bench'>\n                        {this.props.club.bench.map((player, index) => {\n                            return (\n                                <button\n                                    key={`player-${index + 1}`}\n                                    onClick={this.handlePlayerClick}\n                                    value={player.name}\n                                >\n                                    {player.name}\n                                </button>\n                            )\n                        })}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class PlayerView extends Component {\n    render() {\n        return (\n            <div>\n                <h1>{this.props.player.name}</h1>\n                <h2>{this.props.player.position}</h2>\n                <h3>Age: {this.props.player.age}</h3>\n                <h3>Skill: {this.props.player.skill}</h3>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport SimData from '../../test_data.js'\nimport FreeAgentsView from './SimViews/FreeAgentsView.js'\nimport ContintentView from './SimViews/ContinentView.js'\nimport CountryView from './SimViews/CountryView.js'\nimport LeagueView from './SimViews/LeagueView.js'\nimport ClubView from './SimViews/ClubView.js'\nimport PlayerView from './SimViews/PlayerView.js'\nimport axios from 'axios'\n\n\n\nexport default class SimulationArena extends Component {\n    state = {\n        season: {\n            year: 2019\n        },\n        partOfSeason: ['Pre-Season', 'Season', 'Post-Season'],\n        seasonValue: 0,\n        continents: SimData.continents,\n        currentContinent: '',\n        currentCountry: '',\n        currentLeague: '',\n        currentClub: '',\n        currentPlayer: '',\n        countries: [],\n        leagues: [],\n        clubs: [],\n        players: [],\n        randomNames: [],\n        freeAgents: [],\n        showFreeAgents: false,\n        userControlledClub: ''\n    }\n\n    handleAdvanceSeason = () => {\n        const previousState = { ...this.state }\n        if (previousState.seasonValue === 0) {\n            previousState.seasonValue += 1\n            this.createSeasonSchedule(previousState)\n        } else if (previousState.seasonValue === 1) {\n            previousState.seasonValue += 1\n            this.simulateMatches(previousState)\n        } else {\n            previousState.season.year += 1\n            previousState.seasonValue = 0\n            this.agePlayers(previousState)\n        }\n    }\n\n    getName = async (previousState) => {\n        // try {\n        //     let res = await axios.get('https://randomuser.me/api/?results=500&nat=dk,fr,gb&gender=male&inc=name&noinfo')\n        //     previousState.randomNames = res.data.results\n        // } catch (e) {\n            let randomName = []\n            for (let i = 0; i < 500; i++) {\n                let nameItem = {\n                    name: {\n                        first: 'John',\n                        last: `Doe ${this.state.season.year} ${i + 1}`\n                    }\n                }\n                randomName.push(nameItem)\n            }\n            previousState.randomNames = randomName\n        // } finally {\n            this.checkAndAddMissingPositions(previousState)\n        // }\n    }\n\n    createSeasonSchedule = (previousState) => {\n        for (let i = 0; i < previousState.continents.length; i++) {\n            if (previousState.continents[i].countries.length) {\n                for (let j = 0; j < previousState.continents[i].countries.length; j++) {\n                    if (previousState.continents[i].countries[j].leagues.length) {\n                        for (let k = 0; k < previousState.continents[i].countries[j].leagues.length; k++) {\n                            let league = previousState.continents[i].countries[j].leagues[k]\n                            previousState.continents[i].countries[j].leagues[k].schedule = []\n                            let schedule = previousState.continents[i].countries[j].leagues[k].schedule\n                            let allClubs = league.clubs\n                            let match = 1\n                            let leagueTable = allClubs\n                            for (let i = 0; i < allClubs.length; i++) {\n                                for (let j = 0; j < allClubs.length; j++) {\n                                    if (allClubs[i].name !== allClubs[j].name) {\n                                        schedule.push({ home: allClubs[i], away: allClubs[j], match: match, score: { home: '', away: '' } })\n                                        match++\n                                    }\n                                }\n                            }\n                            for (let k = 0; k < leagueTable.length; k++) {\n                                leagueTable[k].points = 0\n                                leagueTable[k].wins = 0\n                                leagueTable[k].draws = 0\n                                leagueTable[k].losses = 0\n                                leagueTable[k].goalsFor = 0\n                                leagueTable[k].goalsAgainst = 0\n                                leagueTable[k].goalDifferential = 0\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.getName(previousState)\n    }\n\n    checkAndAddMissingPositions = (previousState) => {\n        for (let i = 0; i < previousState.continents.length; i++) {\n            if (previousState.continents[i].countries.length) {\n                for (let j = 0; j < previousState.continents[i].countries.length; j++) {\n                    if (previousState.continents[i].countries[j].leagues.length) {\n                        for (let k = 0; k < previousState.continents[i].countries[j].leagues.length; k++) {\n                            if (previousState.continents[i].countries[j].leagues[k].clubs.length) {\n                                for (let l = 0; l < previousState.continents[i].countries[j].leagues[k].clubs.length; l++) {\n                                    const club = previousState.continents[i].countries[j].leagues[k].clubs[l]\n                                    const requiredPos = {\n                                        'GK': 1,\n                                        'LB': 1,\n                                        'CB': 2,\n                                        'RB': 1,\n                                        'LM': 1,\n                                        'CM': 2,\n                                        'RM': 1,\n                                        'ST': 2\n                                    }\n                                    for (let m = 0; m < club.players.length; m++) {\n                                        requiredPos[club.players[m].posAbr] -= 1\n                                    }\n                                    const posNeedingToBeFilled = Object.entries(requiredPos)\n                                    for (let n = 0; n < posNeedingToBeFilled.length; n++) {\n                                        if (posNeedingToBeFilled[n][1] === 2) {\n                                            club.players.push(this.createFillerPlayer(posNeedingToBeFilled[n][0], previousState.randomNames.pop()))\n                                            club.players.push(this.createFillerPlayer(posNeedingToBeFilled[n][0], previousState.randomNames.pop()))\n                                        }\n                                        if (posNeedingToBeFilled[n][1] === 1) {\n                                            club.players.push(this.createFillerPlayer(posNeedingToBeFilled[n][0], previousState.randomNames.pop()))\n                                        }\n                                    }\n\n\n                                    //Divide lineup players and bench\n                                    let lineup = []\n                                    let bench = []\n\n                                    //Divide Strikers\n                                    let strikers = club.players.filter(player => {\n                                        return player.posAbr === 'ST'\n                                    })\n                                    if (strikers.length > 2) {\n                                        let striker1\n                                        let striker2\n                                        if (strikers[0].skill >= strikers[1].skill) {\n                                            striker1 = strikers[0]\n                                            striker2 = strikers[1]\n                                        } else {\n                                            striker1 = strikers[1]\n                                            striker2 = strikers[0]\n                                        }\n                                        for (let stIndex = 0; stIndex < strikers.length; stIndex++) {\n                                            if (strikers[stIndex].skill > striker1.skill) {\n                                                striker2 = striker1\n                                                striker1 = strikers[stIndex]\n                                            } else if (strikers[stIndex].skill > striker2.skill) {\n                                                striker2 = strikers[stIndex]\n                                            }\n                                        }\n                                        lineup.push(striker1)\n                                        lineup.push(striker2)\n                                        for (let stIndex = 0; stIndex < strikers.length; stIndex++) {\n                                            if (strikers[stIndex] !== striker1 && strikers[stIndex] !== striker2) {\n                                                bench.push(strikers[stIndex])\n                                            }\n                                        }\n                                    } else {\n                                        lineup.push(strikers[0])\n                                        lineup.push(strikers[1])\n                                    }\n\n                                    //Divide Left Midfielders\n                                    let leftMidfielders = club.players.filter(player => {\n                                        return player.posAbr === 'LM'\n                                    })\n                                    if (leftMidfielders.length > 1) {\n                                        let leftMidfielder1\n                                        if (leftMidfielders[0].skill >= leftMidfielders[1].skill) {\n                                            leftMidfielder1 = leftMidfielders[0]\n                                        } else {\n                                            leftMidfielder1 = leftMidfielders[1]\n                                        }\n                                        for (let lmIndex = 0; lmIndex < leftMidfielders.length; lmIndex++) {\n                                            if (leftMidfielders[lmIndex].skill > leftMidfielder1.skill) {\n                                                leftMidfielder1 = leftMidfielders[lmIndex]\n                                            }\n                                        }\n                                        lineup.push(leftMidfielder1)\n                                        for (let lmIndex = 0; lmIndex < leftMidfielders.length; lmIndex++) {\n                                            if (leftMidfielders[lmIndex] !== leftMidfielder1) {\n                                                bench.push(leftMidfielders[lmIndex])\n                                            }\n                                        }\n                                    } else {\n                                        lineup.push(leftMidfielders[0])\n                                    }\n\n                                    //Divide Center Midfielders\n                                    let centerMidfielders = club.players.filter(player => {\n                                        return player.posAbr === 'CM'\n                                    })\n                                    if (centerMidfielders.length > 2) {\n                                        let centerMid1\n                                        let centerMid2\n                                        if (centerMidfielders[0].skill >= centerMidfielders[1].skill) {\n                                            centerMid1 = centerMidfielders[0]\n                                            centerMid2 = centerMidfielders[1]\n                                        } else {\n                                            centerMid1 = centerMidfielders[1]\n                                            centerMid2 = centerMidfielders[0]\n                                        }\n                                        for (let cmIndex = 0; cmIndex < centerMidfielders.length; cmIndex++) {\n                                            if (centerMidfielders[cmIndex].skill > centerMid1.skill) {\n                                                centerMid2 = centerMid1\n                                                centerMid1 = centerMidfielders[cmIndex]\n                                            } else if (centerMidfielders[cmIndex].skill > centerMid2.skill) {\n                                                centerMid2 = centerMidfielders[cmIndex]\n                                            }\n                                        }\n                                        lineup.push(centerMid1)\n                                        lineup.push(centerMid2)\n                                        for (let cmIndex = 0; cmIndex < centerMidfielders.length; cmIndex++) {\n                                            if (centerMidfielders[cmIndex] !== centerMid1 && centerMidfielders[cmIndex] !== centerMid2) {\n                                                bench.push(centerMidfielders[cmIndex])\n                                            }\n                                        }\n                                    } else {\n                                        lineup.push(centerMidfielders[0])\n                                        lineup.push(centerMidfielders[1])\n                                    }\n\n                                    //Divide Right Midfielders\n                                    let rightMidfielders = club.players.filter(player => {\n                                        return player.posAbr === 'RM'\n                                    })\n                                    if (rightMidfielders.length > 1) {\n                                        let rightMidfielder1\n                                        if (rightMidfielders[0].skill >= rightMidfielders[1].skill) {\n                                            rightMidfielder1 = rightMidfielders[0]\n                                        } else {\n                                            rightMidfielder1 = rightMidfielders[1]\n                                        }\n                                        for (let rmIndex = 0; rmIndex < rightMidfielders.length; rmIndex++) {\n                                            if (rightMidfielders[rmIndex].skill > rightMidfielder1.skill) {\n                                                rightMidfielder1 = rightMidfielders[rmIndex]\n                                            }\n                                        }\n                                        lineup.push(rightMidfielder1)\n                                        for (let rmIndex = 0; rmIndex < rightMidfielders.length; rmIndex++) {\n                                            if (rightMidfielders[rmIndex] !== rightMidfielder1) {\n                                                bench.push(rightMidfielders[rmIndex])\n                                            }\n                                        }\n                                    } else {\n                                        lineup.push(rightMidfielders[0])\n                                    }\n\n                                    //Divide Left Backs\n                                    let leftBacks = club.players.filter(player => {\n                                        return player.posAbr === 'LB'\n                                    })\n                                    if (leftBacks.length > 1) {\n                                        let leftBack1\n                                        if (leftBacks[0].skill >= leftBacks[1].skill) {\n                                            leftBack1 = leftBacks[0]\n                                        } else {\n                                            leftBack1 = leftBacks[1]\n                                        }\n                                        for (let lbIndex = 0; lbIndex < leftBacks.length; lbIndex++) {\n                                            if (leftBacks[lbIndex].skill > leftBack1.skill) {\n                                                leftBack1 = leftBacks[lbIndex]\n                                            }\n                                        }\n                                        lineup.push(leftBack1)\n                                        for (let lbIndex = 0; lbIndex < leftBacks.length; lbIndex++) {\n                                            if (leftBacks[lbIndex] !== leftBack1) {\n                                                bench.push(leftBacks[lbIndex])\n                                            }\n                                        }\n                                    } else {\n                                        lineup.push(leftBacks[0])\n                                    }\n\n                                    //Divide Center Backs\n                                    let centerBacks = club.players.filter(player => {\n                                        return player.posAbr === 'CB'\n                                    })\n                                    if (centerBacks.length > 2) {\n                                        let centerBack1\n                                        let centerBack2\n                                        if (centerBacks[0].skill >= centerBacks[1].skill) {\n                                            centerBack1 = centerBacks[0]\n                                            centerBack2 = centerBacks[1]\n                                        } else {\n                                            centerBack1 = centerBacks[1]\n                                            centerBack2 = centerBacks[0]\n                                        }\n                                        for (let cbIndex = 0; cbIndex < centerBacks.length; cbIndex++) {\n                                            if (centerBacks[cbIndex].skill > centerBack1.skill) {\n                                                centerBack2 = centerBack1\n                                                centerBack1 = centerBacks[cbIndex]\n                                            } else if (centerBacks[cbIndex].skill > centerBack2.skill) {\n                                                centerBack2 = centerBacks[cbIndex]\n                                            }\n                                        }\n                                        lineup.push(centerBack1)\n                                        lineup.push(centerBack2)\n                                        for (let cbIndex = 0; cbIndex < centerBacks.length; cbIndex++) {\n                                            if (centerBacks[cbIndex] !== centerBack1 && centerBacks[cbIndex] !== centerBack2) {\n                                                bench.push(centerBacks[cbIndex])\n                                            }\n                                        }\n                                    } else {\n                                        lineup.push(centerBacks[0])\n                                        lineup.push(centerBacks[1])\n                                    }\n\n                                    //Divide Right Backs\n                                    let rightBacks = club.players.filter(player => {\n                                        return player.posAbr === 'RB'\n                                    })\n                                    if (rightBacks.length > 1) {\n                                        let rightBack1\n                                        if (rightBacks[0].skill >= rightBacks[1].skill) {\n                                            rightBack1 = rightBacks[0]\n                                        } else {\n                                            rightBack1 = rightBacks[1]\n                                        }\n                                        for (let rbIndex = 0; rbIndex < rightBacks.length; rbIndex++) {\n                                            if (rightBacks[rbIndex].skill > rightBack1.skill) {\n                                                rightBack1 = rightBacks[rbIndex]\n                                            }\n                                        }\n                                        lineup.push(rightBack1)\n                                        for (let rbIndex = 0; rbIndex < rightBacks.length; rbIndex++) {\n                                            if (rightBacks[rbIndex] !== rightBack1) {\n                                                bench.push(rightBacks[rbIndex])\n                                            }\n                                        }\n                                    } else {\n                                        lineup.push(rightBacks[0])\n                                    }\n\n                                    //Divide Goalkeepers\n                                    let goalkeepers = club.players.filter(player => {\n                                        return player.posAbr === 'GK'\n                                    })\n                                    if (goalkeepers.length > 1) {\n                                        let goalkeeper1\n                                        if (goalkeepers[0].skill >= goalkeepers[1].skill) {\n                                            goalkeeper1 = goalkeepers[0]\n                                        } else {\n                                            goalkeeper1 = goalkeepers[1]\n                                        }\n                                        for (let gkIndex = 0; gkIndex < goalkeepers.length; gkIndex++) {\n                                            if (goalkeepers[gkIndex].skill > goalkeeper1.skill) {\n                                                goalkeeper1 = goalkeepers[gkIndex]\n                                            }\n                                        }\n                                        lineup.push(goalkeeper1)\n                                        for (let gkIndex = 0; gkIndex < goalkeepers.length; gkIndex++) {\n                                            if (goalkeepers[gkIndex] !== goalkeeper1) {\n                                                bench.push(goalkeepers[gkIndex])\n                                            }\n                                        }\n                                    } else {\n                                        lineup.push(goalkeepers[0])\n                                    }\n\n                                    club.lineup = lineup\n                                    club.bench = bench\n\n\n                                    if (club.bench.length > 12) {\n                                        let count = club.bench.length - 12\n                                        for (let p = 0; p < count; p++) {\n                                            let lowestSkilledPlayer = club.bench[0]\n                                            let lowestSkilledPlayerIndex = 0\n                                            for (let o = 0; o < club.bench.length; o++) {\n                                                if (club.bench[o].skill < lowestSkilledPlayer.skill) {\n                                                    lowestSkilledPlayer = club.bench[o]\n                                                    lowestSkilledPlayerIndex = o\n                                                }\n                                            }\n                                            let removedPlayer = club.bench.splice(lowestSkilledPlayerIndex, 1)[0]\n                                            // console.log(removedPlayer)\n                                            for (let q = 0; q < club.players.length; q++) {\n                                                if (club.players[q] === removedPlayer) {\n                                                    club.players.splice(q, 1)\n                                                    q -= 1\n                                                }\n                                            }\n                                            previousState.freeAgents.push(removedPlayer)\n                                        }\n                                    }\n\n\n                                    let ovrSquadSkill = 0\n                                    let squadAttackingSkill = 0\n                                    let squadDefendingSkill = 0\n                                    let centerMidSkill = 0\n                                    for (let o = 0; o < club.lineup.length; o++) {\n                                        if (club.lineup[o].posAbr === 'CM') {\n                                            centerMidSkill += club.lineup[o].skill\n                                        }\n                                    }\n                                    centerMidSkill = Math.floor(centerMidSkill / 2)\n                                    for (let o = 0; o < club.lineup.length; o++) {\n                                        if (club.lineup[o].posAbr === 'ST' ||\n                                            club.lineup[o].posAbr === 'LM' ||\n                                            club.lineup[o].posAbr === 'RM') {\n                                            squadAttackingSkill += club.lineup[o].skill\n                                        }\n                                    }\n                                    squadAttackingSkill = Math.floor((squadAttackingSkill + centerMidSkill) / 5)\n                                    for (let o = 0; o < club.lineup.length; o++) {\n                                        if (club.lineup[o].posAbr === 'CB' ||\n                                            club.lineup[o].posAbr === 'LB' ||\n                                            club.lineup[o].posAbr === 'RB' ||\n                                            club.lineup[o].posAbr === 'GK') {\n                                            squadDefendingSkill += club.lineup[o].skill\n                                        }\n                                    }\n                                    squadDefendingSkill = Math.floor((squadDefendingSkill + centerMidSkill) / 6)\n                                    ovrSquadSkill = Math.floor((squadAttackingSkill + squadDefendingSkill) / 2)\n                                    club.squadOverallSkill = ovrSquadSkill\n                                    club.squadAttackingSkill = squadAttackingSkill\n                                    club.squadDefendingSkill = squadDefendingSkill\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        //Removes players at age 40 or older\n        for (let i = 0; i < previousState.freeAgents.length; i++) {\n            if (previousState.freeAgents[i].age >= 40) {\n                previousState.freeAgents.splice(i, 1)\n                i -= 1\n            }\n        }\n        //Controls the size of the free agent pool\n        if (previousState.freeAgents.length > 30) {\n            // console.log('going to remove excess free agents')\n            while (previousState.freeAgents.length > 30) {\n                // console.log(previousState.freeAgents.length + ' free agents before')\n                let worstPlayer = previousState.freeAgents[0]\n                let worstIndex = 0\n                for (let i = 0; i < previousState.freeAgents.length; i++) {\n                    if (previousState.freeAgents[i].skill < worstPlayer.skill) {\n                        worstPlayer = previousState.freeAgents[i]\n                        worstIndex = i\n                    }\n                }\n                // console.log(worstPlayer.skill)\n                previousState.freeAgents.splice(worstIndex, 1)\n            }\n            // console.log(previousState.freeAgents.length + ' free agents after')\n        }\n        this.setState(previousState)\n    }\n\n    createFillerPlayer = (pos, name) => {\n        const fullName = name.name.first + ' ' + name.name.last\n        const fullPos = {\n            'GK': 'Goalkeeper',\n            'LB': 'Left Back',\n            'CB': 'Center Back',\n            'RB': 'Right Back',\n            'LM': 'Left Midfielder',\n            'CM': 'Central Midfielder',\n            'RM': 'Right Midfielder',\n            'ST': 'Striker'\n        }\n        const newPlayer = {\n            name: fullName,\n            position: fullPos[pos],\n            posAbr: pos,\n            age: 20,\n            skill: 12\n        }\n        return newPlayer\n    }\n\n    createYouthPlayer = (pos, name, clubYouthRating) => {\n        if (pos === 'ST') {\n            console.log('A striker was born!')\n        }\n        const fullName = name.name.first + ' ' + name.name.last\n        const fullPos = {\n            'GK': 'Goalkeeper',\n            'LB': 'Left Back',\n            'CB': 'Center Back',\n            'RB': 'Right Back',\n            'LM': 'Left Midfielder',\n            'CM': 'Central Midfielder',\n            'RM': 'Right Midfielder',\n            'ST': 'Striker'\n        }\n        const newPlayer = {\n            name: fullName,\n            position: fullPos[pos],\n            posAbr: pos,\n            age: 18,\n            skill: clubYouthRating\n        }\n        return newPlayer\n    }\n\n    getRandomInt = (max) => {\n        return Math.floor(Math.random() * Math.floor(max))\n    }\n\n    calculateGoals = (teamOffRating, oppTeamDefRating) => {\n        let ratingGap = teamOffRating - oppTeamDefRating\n        let possibleGoals = []\n        if (ratingGap > 50) {\n            possibleGoals = [0, 1, 2, 2, 3, 3, 3, 4, 4, 5, 6, 7, 8, 9, 10]\n        }\n        if (ratingGap >= 40 && ratingGap < 50) {\n            possibleGoals = [0, 0, 1, 1, 2, 2, 3, 4, 5, 6]\n        }\n        if (ratingGap >= 30 && ratingGap < 40) {\n            possibleGoals = [0, 0, 1, 1, 2, 2, 3, 3, 4, 5]\n        }\n        if (ratingGap >= 20 && ratingGap < 30) {\n            possibleGoals = [0, 0, 0, 1, 1, 2, 2, 3, 4, 5]\n        }\n        if (ratingGap >= 10 && ratingGap < 20) {\n            possibleGoals = [0, 0, 0, 0, 1, 1, 2, 2, 3, 4]\n        }\n        if (ratingGap > -10 && ratingGap < 10) {\n            possibleGoals = [0, 0, 0, 0, 0, 1, 1, 2, 2, 3]\n        }\n        if (ratingGap > -20 && ratingGap <= -10) {\n            possibleGoals = [0, 0, 0, 0, 0, 0, 1, 1, 2, 3]\n        }\n        if (ratingGap > -30 && ratingGap <= -20) {\n            possibleGoals = [0, 0, 0, 0, 0, 0, 0, 1, 2, 3]\n        }\n        if (ratingGap > -40 && ratingGap <= -30) {\n            possibleGoals = [0, 0, 0, 0, 0, 0, 0, 0, 1, 2]\n        }\n        if (ratingGap > -50 && ratingGap <= -40) {\n            possibleGoals = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1]\n        }\n        if (ratingGap < -50) {\n            possibleGoals = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1]\n        }\n\n        return possibleGoals[this.getRandomInt(possibleGoals.length)]\n    }\n\n    simulateMatches = (previousState) => {\n        for (let i = 0; i < previousState.continents.length; i++) {\n            if (previousState.continents[i].countries.length) {\n                for (let j = 0; j < previousState.continents[i].countries.length; j++) {\n                    if (previousState.continents[i].countries[j].leagues.length) {\n                        for (let k = 0; k < previousState.continents[i].countries[j].leagues.length; k++) {\n                            if (previousState.continents[i].countries[j].leagues[k].schedule.length) {\n                                for (let l = 0; l < previousState.continents[i].countries[j].leagues[k].schedule.length; l++) {\n                                    previousState.continents[i].countries[j].leagues[k].schedule[l].score.away = this.calculateGoals(previousState.continents[i].countries[j].leagues[k].schedule[l].away.squadAttackingSkill, previousState.continents[i].countries[j].leagues[k].schedule[l].home.squadDefendingSkill)\n                                    previousState.continents[i].countries[j].leagues[k].schedule[l].score.home = this.calculateGoals(previousState.continents[i].countries[j].leagues[k].schedule[l].home.squadAttackingSkill, previousState.continents[i].countries[j].leagues[k].schedule[l].away.squadDefendingSkill)\n                                    previousState.continents[i].countries[j].leagues[k].schedule[l].home.goalsFor += previousState.continents[i].countries[j].leagues[k].schedule[l].score.home\n                                    previousState.continents[i].countries[j].leagues[k].schedule[l].home.goalsAgainst += previousState.continents[i].countries[j].leagues[k].schedule[l].score.away\n                                    previousState.continents[i].countries[j].leagues[k].schedule[l].home.goalDifferential = (previousState.continents[i].countries[j].leagues[k].schedule[l].home.goalsFor - previousState.continents[i].countries[j].leagues[k].schedule[l].home.goalsAgainst)\n                                    previousState.continents[i].countries[j].leagues[k].schedule[l].away.goalsFor += previousState.continents[i].countries[j].leagues[k].schedule[l].score.away\n                                    previousState.continents[i].countries[j].leagues[k].schedule[l].away.goalsAgainst += previousState.continents[i].countries[j].leagues[k].schedule[l].score.home\n                                    previousState.continents[i].countries[j].leagues[k].schedule[l].away.goalDifferential = (previousState.continents[i].countries[j].leagues[k].schedule[l].away.goalsFor - previousState.continents[i].countries[j].leagues[k].schedule[l].away.goalsAgainst)\n                                    if (previousState.continents[i].countries[j].leagues[k].schedule[l].score.home === previousState.continents[i].countries[j].leagues[k].schedule[l].score.away) {\n                                        previousState.continents[i].countries[j].leagues[k].schedule[l].home.draws++\n                                        previousState.continents[i].countries[j].leagues[k].schedule[l].home.points++\n                                        previousState.continents[i].countries[j].leagues[k].schedule[l].away.draws++\n                                        previousState.continents[i].countries[j].leagues[k].schedule[l].away.points++\n                                    } else if (previousState.continents[i].countries[j].leagues[k].schedule[l].score.home > previousState.continents[i].countries[j].leagues[k].schedule[l].score.away) {\n                                        previousState.continents[i].countries[j].leagues[k].schedule[l].home.wins++\n                                        previousState.continents[i].countries[j].leagues[k].schedule[l].home.points += 3\n                                        previousState.continents[i].countries[j].leagues[k].schedule[l].away.losses++\n                                    } else {\n                                        previousState.continents[i].countries[j].leagues[k].schedule[l].away.wins++\n                                        previousState.continents[i].countries[j].leagues[k].schedule[l].away.points += 3\n                                        previousState.continents[i].countries[j].leagues[k].schedule[l].home.losses++\n                                    }\n                                }\n                            }\n                            let promotionPoints = 0\n                            let relegationPoints = 200\n                            let promotedClub\n                            let promotedClubGoalDiff = 0\n                            let promotedClubGoalsFor = 0\n                            let relegatedClub\n                            let relegatedClubGoalDiff = 0\n                            let relegatedClubGoalsFor = 0\n                            for (let l = 0; l < previousState.continents[i].countries[j].leagues[k].clubs.length; l++) {\n                                if (previousState.continents[i].countries[j].leagues[k].clubs[l].points > promotionPoints) {\n                                    promotedClub = previousState.continents[i].countries[j].leagues[k].clubs[l]\n                                    promotionPoints = previousState.continents[i].countries[j].leagues[k].clubs[l].points\n                                    promotedClubGoalDiff = previousState.continents[i].countries[j].leagues[k].clubs[l].goalDifferential\n                                    promotedClubGoalsFor = previousState.continents[i].countries[j].leagues[k].clubs[l].goalsFor\n                                } else if (previousState.continents[i].countries[j].leagues[k].clubs[l].points === promotionPoints &&\n                                    previousState.continents[i].countries[j].leagues[k].clubs[l].goalDifferential > promotedClubGoalDiff) {\n                                    promotedClub = previousState.continents[i].countries[j].leagues[k].clubs[l]\n                                    promotionPoints = previousState.continents[i].countries[j].leagues[k].clubs[l].points\n                                    promotedClubGoalDiff = previousState.continents[i].countries[j].leagues[k].clubs[l].goalDifferential\n                                    promotedClubGoalsFor = previousState.continents[i].countries[j].leagues[k].clubs[l].goalsFor\n                                } else if (previousState.continents[i].countries[j].leagues[k].clubs[l].points === promotionPoints &&\n                                    previousState.continents[i].countries[j].leagues[k].clubs[l].goalDifferential === promotedClubGoalDiff &&\n                                    previousState.continents[i].countries[j].leagues[k].clubs[l].goalsFor > promotedClubGoalsFor) {\n                                    promotedClub = previousState.continents[i].countries[j].leagues[k].clubs[l]\n                                    promotionPoints = previousState.continents[i].countries[j].leagues[k].clubs[l].points\n                                    promotedClubGoalDiff = previousState.continents[i].countries[j].leagues[k].clubs[l].goalDifferential\n                                    promotedClubGoalsFor = previousState.continents[i].countries[j].leagues[k].clubs[l].goalsFor\n                                }\n                                if (previousState.continents[i].countries[j].leagues[k].clubs[l].points < relegationPoints) {\n                                    relegatedClub = previousState.continents[i].countries[j].leagues[k].clubs[l]\n                                    relegationPoints = previousState.continents[i].countries[j].leagues[k].clubs[l].points\n                                    relegatedClubGoalDiff = previousState.continents[i].countries[j].leagues[k].clubs[l].goalDifferential\n                                    relegatedClubGoalsFor = previousState.continents[i].countries[j].leagues[k].clubs[l].goalsFor\n                                } else if (previousState.continents[i].countries[j].leagues[k].clubs[l].points === relegationPoints &&\n                                    previousState.continents[i].countries[j].leagues[k].clubs[l].goalDifferential < relegatedClubGoalDiff) {\n                                    relegatedClub = previousState.continents[i].countries[j].leagues[k].clubs[l]\n                                    relegationPoints = previousState.continents[i].countries[j].leagues[k].clubs[l].points\n                                    relegatedClubGoalDiff = previousState.continents[i].countries[j].leagues[k].clubs[l].goalDifferential\n                                    relegatedClubGoalsFor = previousState.continents[i].countries[j].leagues[k].clubs[l].goalsFor\n                                } else if (previousState.continents[i].countries[j].leagues[k].clubs[l].points === relegationPoints &&\n                                    previousState.continents[i].countries[j].leagues[k].clubs[l].goalDifferential === relegatedClubGoalDiff &&\n                                    previousState.continents[i].countries[j].leagues[k].clubs[l].goalsFor < relegatedClubGoalsFor) {\n                                    relegatedClub = previousState.continents[i].countries[j].leagues[k].clubs[l]\n                                    relegationPoints = previousState.continents[i].countries[j].leagues[k].clubs[l].points\n                                    relegatedClubGoalDiff = previousState.continents[i].countries[j].leagues[k].clubs[l].goalDifferential\n                                    relegatedClubGoalsFor = previousState.continents[i].countries[j].leagues[k].clubs[l].goalsFor\n                                }\n                            }\n\n                            previousState.continents[i].countries[j].leagues[k].promotedClub = promotedClub\n                            previousState.continents[i].countries[j].leagues[k].relegatedClub = relegatedClub\n                        }\n                    }\n                }\n            }\n        }\n\n        this.setState(previousState)\n    }\n\n    promoteAndRelegateClubs = (previousState) => {\n        for (let i = 0; i < previousState.continents.length; i++) {\n            if (previousState.continents[i].countries.length) {\n                for (let j = 0; j < previousState.continents[i].countries.length; j++) {\n                    if (previousState.continents[i].countries[j].leagues.length) {\n                        for (let k = 0; k < previousState.continents[i].countries[j].leagues.length; k++) {\n                            let league = previousState.continents[i].countries[j].leagues[k]\n                            // console.log(league.name)\n                            if (league.proPos) {\n                                for (let l = 0; l < league.clubs.length; l++) {\n                                    if (league.clubs[l] === league.promotedClub) {\n                                        league.clubs.splice(l, 1)\n                                        let promotedClub = league.promotedClub\n                                        previousState.continents[i].countries[j].leagues[k - 1].clubs.push(promotedClub)\n                                        // console.log(promotedClub.name + ' has been promoted from ' + league.name)\n                                    }\n                                }\n                            }\n                            if (league.relPos) {\n                                for (let l = 0; l < league.clubs.length; l++) {\n                                    if (league.clubs[l] === league.relegatedClub) {\n                                        league.clubs.splice(l, 1)\n                                        let relegatedClub = league.relegatedClub\n                                        previousState.continents[i].countries[j].leagues[k + 1].clubs.push(relegatedClub)\n                                        // console.log(relegatedClub.name + ' has been relegated from ' + league.name)\n                                    }\n                                }\n                            }\n\n                        }\n                        for (let l = 0; l < previousState.continents[i].countries[j].leagues.length; l++) {\n                            let league = previousState.continents[i].countries[j].leagues[l]\n                            for (let m = 0; m < league.clubs.length; m++) {\n                                let club = league.clubs[m]\n                                if (club.trainingRating > league.trainingCeiling) {\n                                    club.trainingRating -= 5\n                                    if (club.trainingRating < league.trainingCeiling) {\n                                        club.trainingRating = league.trainingCeiling\n                                    }\n                                } else if (club.trainingRating < league.trainingFloor) {\n                                    club.trainingRating += 5\n                                    if (club.trainingRating > league.trainingFloor) {\n                                        club.trainingRating = league.trainingFloor\n                                    }\n                                } else if (club.trainingRating >= league.trainingFloor && club.trainingRating < league.trainingCeiling) {\n                                    club.trainingRating += 1\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    agePlayers = (previousState) => {\n        for (let i = 0; i < previousState.continents.length; i++) {\n            if (previousState.continents[i].countries.length) {\n                for (let j = 0; j < previousState.continents[i].countries.length; j++) {\n                    if (previousState.continents[i].countries[j].leagues.length) {\n                        for (let k = 0; k < previousState.continents[i].countries[j].leagues.length; k++) {\n                            if (previousState.continents[i].countries[j].leagues[k].clubs.length) {\n                                for (let l = 0; l < previousState.continents[i].countries[j].leagues[k].clubs.length; l++) {\n                                    if (previousState.continents[i].countries[j].leagues[k].clubs[l].players.length) {\n                                        for (let m = 0; m < previousState.continents[i].countries[j].leagues[k].clubs[l].players.length; m++) {\n                                            let club = previousState.continents[i].countries[j].leagues[k].clubs[l]\n                                            let player = club.players[m]\n                                            if (player.age === 40) {\n                                                // console.log(`${player.name} of ${club.name} is retiring.`)\n                                                club.players.splice(m, 1)\n                                                m -= 1\n                                            }\n                                            if (player.age < 30) {\n                                                player.skill += this.skillGainsThroughClubTraining(club.trainingRating)\n                                                if (player.skill > 99) {\n                                                    player.skill = 99\n                                                }\n                                            }\n                                            if (player.age >= 30) {\n                                                player.skill -= this.skillGainsThroughClubTraining(100 - club.trainingRating)\n                                                if (player.skill < 1) {\n                                                    player.skill = 1\n                                                }\n                                            }\n                                            player.age += 1\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.youthIntake(previousState)\n        this.promoteAndRelegateClubs(previousState)\n        this.setState(previousState)\n    }\n\n    positionSelector = () => {\n        const possiblePositions = {\n            0: 'GK',\n            1: 'LB',\n            2: 'CB',\n            3: 'RB',\n            4: 'LM',\n            5: 'CM',\n            6: 'RM',\n            7: 'ST'\n        }\n        return possiblePositions[this.getRandomInt(8)]\n    }\n\n    youthIntake = (previousState) => {\n        for (let i = 0; i < previousState.continents.length; i++) {\n            if (previousState.continents[i].countries.length) {\n                for (let j = 0; j < previousState.continents[i].countries.length; j++) {\n                    if (previousState.continents[i].countries[j].leagues.length) {\n                        for (let k = 0; k < previousState.continents[i].countries[j].leagues.length; k++) {\n                            if (previousState.continents[i].countries[j].leagues[k].clubs.length) {\n                                for (let l = 0; l < previousState.continents[i].countries[j].leagues[k].clubs.length; l++) {\n                                    const club = previousState.continents[i].countries[j].leagues[k].clubs[l]\n                                    let newPlayer1 = this.createYouthPlayer(this.positionSelector(), previousState.randomNames.pop(), club.youthRating)\n                                    let newPlayer2 = this.createYouthPlayer(this.positionSelector(), previousState.randomNames.pop(), club.youthRating)\n                                    club.players.push(newPlayer1)\n                                    club.players.push(newPlayer2)\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    skillGainsThroughClubTraining = (clubTrainingRating) => {\n        if (clubTrainingRating < 27) {\n            clubTrainingRating = 27\n        }\n        let skillGain = Math.floor(Math.random() * Math.floor(clubTrainingRating / 9))\n        skillGain += (clubTrainingRating / 30)\n        if (skillGain > Math.floor(clubTrainingRating / 9)) {\n            skillGain = Math.floor(clubTrainingRating / 9)\n        }\n        return Math.floor(skillGain)\n    }\n\n    moveFreeAgentToCurrentClub = (index) => {\n        if (!this.state.userControlledClub) {\n            console.log('No club is selected')\n            return\n        }\n        const previousState = {...this.state}\n        const player = previousState.freeAgents.splice(index, 1)\n        previousState.userControlledClub.players.push(player[0])\n        this.setState(previousState)\n    }\n\n    handleFreeAgentsViewClick = () => {\n        const previousState = { ...this.state }\n        previousState.showFreeAgents = !this.state.showFreeAgents\n        this.setState(previousState)\n    }\n\n    handleContinentClick = (e) => {\n        const previousState = { ...this.state }\n        previousState.currentContinent = this.state.continents[e.target.value]\n        previousState.currentCountry = ''\n        previousState.currentLeague = ''\n        previousState.currentClub = ''\n        previousState.currentPlayer = ''\n        previousState.countries = this.state.continents[e.target.value].countries\n        previousState.leagues = []\n        previousState.clubs = []\n        previousState.players = []\n        this.setState(previousState)\n    }\n\n    handleCountryClick = (index) => {\n        const previousState = { ...this.state }\n        previousState.currentCountry = this.state.currentContinent.countries[index]\n        previousState.currentLeague = ''\n        previousState.currentClub = ''\n        previousState.currentPlayer = ''\n        previousState.leagues = previousState.currentCountry.leagues\n        previousState.clubs = []\n        previousState.players = []\n        this.setState(previousState)\n    }\n\n    handleLeagueClick = (index) => {\n        const previousState = { ...this.state }\n        previousState.currentLeague = this.state.currentCountry.leagues[index]\n        previousState.currentClub = ''\n        previousState.currentPlayer = ''\n        previousState.clubs = previousState.currentLeague.clubs\n        previousState.players = []\n        this.setState(previousState)\n    }\n\n    handleClubClick = (index) => {\n        const previousState = { ...this.state }\n        previousState.currentClub = this.state.currentLeague.clubs[index]\n        previousState.currentPlayer = ''\n        previousState.players = previousState.currentClub.players\n        this.setState(previousState)\n    }\n\n    handleControlClick = (club) => {\n        const previousState = {...this.state}\n        previousState.userControlledClub = club\n        this.setState(previousState)\n    }\n\n    handlePlayerClick = (index) => {\n        const previousState = { ...this.state }\n        previousState.currentPlayer = this.state.currentClub.players[index]\n        this.setState(previousState)\n    }\n\n    render() {\n        let seasonValue = this.state.seasonValue\n        return (\n            <div className='simArena'>\n                <div className='banner'>\n                    <div className='leftBan'>\n                        <h1><span className='advance' onClick={this.handleAdvanceSeason}>>>></span> | {this.state.season.year} {this.state.partOfSeason[seasonValue]}</h1>\n                    </div>\n                    <div className='rightBan'>\n                        {this.state.userControlledClub ?\n                            <div>Controlling {this.state.userControlledClub.name}</div>\n                            : <div>Select a club to control.</div>\n                        }\n                    </div>\n                </div>\n                <button onClick={this.handleFreeAgentsViewClick}>Free Agents</button>\n                {this.state.showFreeAgents ?\n                    <FreeAgentsView\n                        freeAgents={this.state.freeAgents}\n                        moveFreeAgentToCurrentClub={this.moveFreeAgentToCurrentClub}\n                    />\n                    : null\n                }\n                <h1>World</h1>\n                <div className='buttonList'>\n                    {this.state.continents.map((continent, index) => {\n                        return (\n                            <button\n                                key={`continent-${index + 1}`}\n                                onClick={this.handleContinentClick}\n                                value={index}\n                            >\n                                {continent.name}\n                            </button>\n                        )\n                    })}\n                </div>\n                <br />\n                {this.state.countries.length ?\n                    <div>\n                        <hr />\n                        <ContintentView\n                            continent={this.state.currentContinent}\n                            handleCountryClick={this.handleCountryClick}\n                        />\n                        <br />\n                    </div>\n                    : null\n                }\n                {this.state.leagues.length ?\n                    <div>\n                        <hr />\n                        <CountryView\n                            country={this.state.currentCountry}\n                            handleLeagueClick={this.handleLeagueClick}\n                        />\n                        <br />\n                    </div>\n                    : null\n                }\n                {this.state.clubs.length ?\n                    <div>\n                        <hr />\n                        <LeagueView\n                            league={this.state.currentLeague}\n                            handleClubClick={this.handleClubClick}\n                        />\n                        <br />\n                    </div>\n                    : null\n                }\n                {this.state.players.length ?\n                    <div>\n                        <hr />\n                        <ClubView\n                            club={this.state.currentClub}\n                            handleControlClick={this.handleControlClick}\n                            handlePlayerClick={this.handlePlayerClick}\n                        />\n                        <br />\n                    </div>\n                    : null\n                }\n                {this.state.currentPlayer ?\n                    <div>\n                        <hr />\n                        <PlayerView\n                            player={this.state.currentPlayer}\n                        />\n                        <br />\n                    </div>\n                    : null\n                }\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Dashboard from './Dashboard.js'\nimport AllLeagues from './components/League/AllLeagues.js'\nimport SingleLeague from './components/League/SingleLeague.js'\nimport AllClubs from './components/Club/AllClubs.js'\nimport SingleClub from './components/Club/SingleClub.js'\nimport AllPlayers from './components/Player/AllPlayers.js'\nimport SinglePlayer from './components/Player/SinglePlayer.js'\nimport SimulationArena from './components/SimulationArena//SimulationArena.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard}/>\n          <Route exact path=\"/league\" component={AllLeagues}/>\n          <Route exact path=\"/league/:leagueId\" component={SingleLeague}/>\n          <Route exact path=\"/club\" component={AllClubs}/>\n          <Route exact path=\"/club/:clubId\" component={SingleClub}/>\n          <Route exact path=\"/player\" component={AllPlayers}/>\n          <Route exact path=\"/player/:playerId\" component={SinglePlayer}/>\n          <Route exact path=\"/sim\" component={SimulationArena}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}